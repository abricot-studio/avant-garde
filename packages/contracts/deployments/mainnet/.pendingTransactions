{
  "0x70082ad73a8aefcd22f2353b52e8718165263e99ca13ce93c7c98e211e617187": {
    "name": "AvantGarde",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AvantGarde",
      "sourceName": "contracts/AvantGarde.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "_feesReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "burnPrice",
              "type": "uint256"
            }
          ],
          "name": "Burned",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "mintPrice",
              "type": "uint256"
            }
          ],
          "name": "Minted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minBurnPrice",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFeesReceiver",
              "type": "address"
            }
          ],
          "name": "changeFeesReceiver",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newManager",
              "type": "address"
            }
          ],
          "name": "changeManager",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "currentBurnPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "currentMintPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "currentMintWithFeesPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "currentPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "feesReceiver",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_current",
              "type": "uint256"
            }
          ],
          "name": "mintPriceFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_currentPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_fees",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_current",
              "type": "uint256"
            }
          ],
          "name": "mintWithFeesPriceFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_current",
              "type": "uint256"
            }
          ],
          "name": "priceFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x60806040523480156200001157600080fd5b506040516200269a3803806200269a833981016040819052620000349162000176565b604080518082018252600a8152694176616e74476172646560b01b60208083019182528351808501909452600384526241564760e81b9084015281519192916200008191600091620000d0565b50805162000097906001906020840190620000d0565b5050600980546001600160a01b039485166001600160a01b0319918216179091556008805493909416921691909117909155506200020b565b828054620000de90620001b5565b90600052602060002090601f0160209004810192826200010257600085556200014d565b82601f106200011d57805160ff19168380011785556200014d565b828001600101855582156200014d579182015b828111156200014d57825182559160200191906001019062000130565b506200015b9291506200015f565b5090565b5b808211156200015b576000815560010162000160565b600080604083850312156200018a57600080fd5b82516200019781620001f2565b6020840151909250620001aa81620001f2565b809150509250929050565b600181811c90821680620001ca57607f821691505b60208210811415620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200020857600080fd5b50565b61247f806200021b6000396000f3fe60806040526004361061019c5760003560e01c806377119765116100ec578063a3fbbaae1161008a578063bca93cf511610064578063bca93cf514610493578063c87b56dd146104b3578063e985e9c5146104d3578063f620c8151461051c57600080fd5b8063a3fbbaae14610433578063b390c0ab14610453578063b88d4fde1461047357600080fd5b806395d89b41116100c657806395d89b41146103c957806399f7ab31146103de5780639d1b464a146103fe578063a22cb4651461041357600080fd5b806377119765146103745780638d5555f2146103895780638def9f82146103a957600080fd5b806323b872dd116101595780634737576e116101335780634737576e14610301578063481c6a75146103145780636352211e1461033457806370a082311461035457600080fd5b806323b872dd146102a157806331fd9fd1146102c157806342842e0e146102e157600080fd5b806301ffc9a7146101a15780630561942a146101d657806306fdde0314610200578063081812fc14610222578063095ea7b31461025a57806318160ddd1461027c575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f8a565b610531565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610583565b604080519283526020830191909152016101cd565b34801561020c57600080fd5b506102156105a5565b6040516101cd919061213f565b34801561022e57600080fd5b5061024261023d36600461203f565b610637565b6040516001600160a01b0390911681526020016101cd565b34801561026657600080fd5b5061027a610275366004611f60565b6106c4565b005b34801561028857600080fd5b506007546102939081565b6040519081526020016101cd565b3480156102ad57600080fd5b5061027a6102bc366004611e80565b6107da565b3480156102cd57600080fd5b506101c16102dc366004611e32565b61080b565b3480156102ed57600080fd5b5061027a6102fc366004611e80565b610874565b61029361030f366004611fc4565b61088f565b34801561032057600080fd5b50600954610242906001600160a01b031681565b34801561034057600080fd5b5061024261034f36600461203f565b610a24565b34801561036057600080fd5b5061029361036f366004611e32565b610a9b565b34801561038057600080fd5b50610293610b22565b34801561039557600080fd5b506102936103a436600461203f565b610b35565b3480156103b557600080fd5b506102936103c436600461203f565b610b61565b3480156103d557600080fd5b50610215610b86565b3480156103ea57600080fd5b506101eb6103f936600461203f565b610b95565b34801561040a57600080fd5b50610293610bb5565b34801561041f57600080fd5b5061027a61042e366004611f24565b610bce565b34801561043f57600080fd5b506101c161044e366004611e32565b610c93565b34801561045f57600080fd5b506101c161046e366004612058565b610cfb565b34801561047f57600080fd5b5061027a61048e366004611ebc565b610ddb565b34801561049f57600080fd5b50600854610242906001600160a01b031681565b3480156104bf57600080fd5b506102156104ce36600461203f565b610e13565b3480156104df57600080fd5b506101c16104ee366004611e4d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052857600080fd5b50610293610f91565b60006001600160e01b031982166380ac58cd60e01b148061056257506001600160e01b03198216635b5e139f60e01b145b8061057d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061059d61059260075490565b6103f99060016121f5565b915091509091565b6060600080546105b490612371565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090612371565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050905090565b600061064282610faa565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cf82610a24565b9050806001600160a01b0316836001600160a01b0316141561073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161069f565b336001600160a01b0382161480610759575061075981336104ee565b6107cb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069f565b6107d58383610fc7565b505050565b6107e43382611035565b6108005760405162461bcd60e51b815260040161069f906121a4565b6107d583838361111b565b6008546000906001600160a01b0316331461084e5760405162461bcd60e51b815260206004820152600360248201526227232960e91b604482015260640161069f565b50600880546001600160a01b0319166001600160a01b0392909216919091179055600190565b6107d583838360405180602001604052806000815250610ddb565b60008083336040516020016108a59291906120a6565b604051602081830303815290604052905060006109208461091a84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112bb565b6009549091506001600160a01b038083169116146109655760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b600080610970610583565b909250905061097f81836121f5565b34146109b25760405162461bcd60e51b8152602060048201526002602482015261414960f01b604482015260640161069f565b6109c0600780546001019055565b3394506109cd858061135f565b6109d7858861137d565b6008546109ed906001600160a01b031682611408565b604051349086907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd90600090a35050505092915050565b6000818152600260205260408120546001600160a01b03168061057d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161069f565b60006001600160a01b038216610b065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161069f565b506001600160a01b031660009081526003602052604090205490565b6000610b306103a460075490565b905090565b6000612710610b45600284612264565b610b5790670de0b6b3a764000061230f565b61057d919061220d565b6000806000610b6f84610b95565b9092509050610b7e81836121f5565b949350505050565b6060600180546105b490612371565b600080610ba183610b35565b9150610bae600a8361220d565b9050915091565b6000610b30610bc360075490565b6103a49060016121f5565b6001600160a01b038216331415610c275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009546000906001600160a01b03163314610cd55760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055600190565b600033610d0784610a24565b6001600160a01b031614610d425760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640161069f565b610d4c6007611521565b610d5583611578565b6000610d5f610bb5565b905082811015610d9a5760405162461bcd60e51b815260040161069f906020808252600490820152634d42504960e01b604082015260600190565b610da43382611408565b604051819085907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35060019392505050565b610de53383611035565b610e015760405162461bcd60e51b815260040161069f906121a4565b610e0d848484846115bb565b50505050565b6060610e1e82610faa565b610e845760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161069f565b60008281526006602052604081208054610e9d90612371565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec990612371565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505090506000610f43604080518082019091526007815266697066733a2f2f60c81b602082015290565b9050805160001415610f56575092915050565b815115610f88578082604051602001610f709291906120dd565b60405160208183030381529060405292505050919050565b610b7e846115ee565b6000610b30610f9f60075490565b6103c49060016121f5565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ffc82610a24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061104082610faa565b6110a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069f565b60006110ac83610a24565b9050806001600160a01b0316846001600160a01b031614806110e75750836001600160a01b03166110dc84610637565b6001600160a01b0316145b80610b7e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610b7e565b826001600160a01b031661112e82610a24565b6001600160a01b0316146111965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161069f565b6001600160a01b0382166111f85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161069f565b611203600082610fc7565b6001600160a01b038316600090815260036020526040812080546001929061122c90849061232e565b90915550506001600160a01b038216600090815260036020526040812080546001929061125a9084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008151604114156112ef5760208201516040830151606084015160001a6112e5868285856116d5565b935050505061057d565b815160401415611317576020820151604083015161130e85838361187e565b9250505061057d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161069f565b6113798282604051806020016040528060008152506118a8565b5050565b61138682610faa565b6113e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161069f565b600082815260066020908152604090912082516107d592840190611cb1565b804710156114585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161069f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50509050806107d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161069f565b8054806115705760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161069f565b600019019055565b611581816118db565b6000818152600660205260409020805461159a90612371565b1590506115b85760008181526006602052604081206115b891611d35565b50565b6115c684848461111b565b6115d284848484611976565b610e0d5760405162461bcd60e51b815260040161069f90612152565b60606115f982610faa565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161069f565b6000611683604080518082019091526007815266697066733a2f2f60c81b602082015290565b905060008151116116a357604051806020016040528060008152506116ce565b806116ad84611a80565b6040516020016116be9291906120dd565b6040516020818303038152906040525b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161069f565b8360ff16601b148061176757508360ff16601c145b6117be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161069f565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611812573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161069f565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161189e868287856116d5565b9695505050505050565b6118b28383611b7e565b6118bf6000848484611976565b6107d55760405162461bcd60e51b815260040161069f90612152565b60006118e682610a24565b90506118f3600083610fc7565b6001600160a01b038116600090815260036020526040812080546001929061191c90849061232e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611a7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119ba90339089908890889060040161210c565b602060405180830381600087803b1580156119d457600080fd5b505af1925050508015611a04575060408051601f3d908101601f19168201909252611a0191810190611fa7565b60015b611a5e573d808015611a32576040519150601f19603f3d011682016040523d82523d6000602084013e611a37565b606091505b508051611a565760405162461bcd60e51b815260040161069f90612152565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7e565b506001610b7e565b606081611aa45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ace5780611ab8816123ac565b9150611ac79050600a8361220d565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae961241d565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610b7e57611b2860018361232e565b9150611b35600a866123c7565b611b409060306121f5565b60f81b818381518110611b5557611b55612407565b60200101906001600160f81b031916908160001a905350611b77600a8661220d565b9450611b17565b6001600160a01b038216611bd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069f565b611bdd81610faa565b15611c2a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069f565b6001600160a01b0382166000908152600360205260408120805460019290611c539084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611cbd90612371565b90600052602060002090601f016020900481019282611cdf5760008555611d25565b82601f10611cf857805160ff1916838001178555611d25565b82800160010185558215611d25579182015b82811115611d25578251825591602001919060010190611d0a565b50611d31929150611d6b565b5090565b508054611d4190612371565b6000825580601f10611d51575050565b601f0160209004906000526020600020908101906115b891905b5b80821115611d315760008155600101611d6c565b600067ffffffffffffffff80841115611d9b57611d9b61241d565b604051601f8501601f19908116603f01168101908282118183101715611dc357611dc361241d565b81604052809350858152868686011115611ddc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b600082601f830112611e2357600080fd5b6116ce83833560208501611d80565b600060208284031215611e4457600080fd5b6116ce82611df6565b60008060408385031215611e6057600080fd5b611e6983611df6565b9150611e7760208401611df6565b90509250929050565b600080600060608486031215611e9557600080fd5b611e9e84611df6565b9250611eac60208501611df6565b9150604084013590509250925092565b60008060008060808587031215611ed257600080fd5b611edb85611df6565b9350611ee960208601611df6565b925060408501359150606085013567ffffffffffffffff811115611f0c57600080fd5b611f1887828801611e12565b91505092959194509250565b60008060408385031215611f3757600080fd5b611f4083611df6565b915060208301358015158114611f5557600080fd5b809150509250929050565b60008060408385031215611f7357600080fd5b611f7c83611df6565b946020939093013593505050565b600060208284031215611f9c57600080fd5b81356116ce81612433565b600060208284031215611fb957600080fd5b81516116ce81612433565b60008060408385031215611fd757600080fd5b823567ffffffffffffffff80821115611fef57600080fd5b818501915085601f83011261200357600080fd5b61201286833560208501611d80565b9350602085013591508082111561202857600080fd5b5061203585828601611e12565b9150509250929050565b60006020828403121561205157600080fd5b5035919050565b6000806040838503121561206b57600080fd5b50508035926020909101359150565b60008151808452612092816020860160208601612345565b601f01601f19169290920160200192915050565b600083516120b8818460208801612345565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516120ef818460208801612345565b835190830190612103818360208801612345565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061189e9083018461207a565b6020815260006116ce602083018461207a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612208576122086123db565b500190565b60008261221c5761221c6123f1565b500490565b600181815b8085111561225c578160001904821115612242576122426123db565b8085161561224f57918102915b93841c9390800290612226565b509250929050565b60006116ce60ff84168360008261227d5750600161057d565b8161228a5750600061057d565b81600181146122a057600281146122aa576122c6565b600191505061057d565b60ff8411156122bb576122bb6123db565b50506001821b61057d565b5060208310610133831016604e8410600b84101617156122e9575081810a61057d565b6122f38383612221565b8060001904821115612307576123076123db565b029392505050565b6000816000190483118215151615612329576123296123db565b500290565b600082821015612340576123406123db565b500390565b60005b83811015612360578181015183820152602001612348565b83811115610e0d5750506000910152565b600181811c9082168061238557607f821691505b602082108114156123a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123c0576123c06123db565b5060010190565b6000826123d6576123d66123f1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115b857600080fdfea2646970667358221220b1eae1411e039c77b744d2005dac8843c45f41020cafa3325ed5f0eb23b8884764736f6c63430008060033",
      "deployedBytecode": "0x60806040526004361061019c5760003560e01c806377119765116100ec578063a3fbbaae1161008a578063bca93cf511610064578063bca93cf514610493578063c87b56dd146104b3578063e985e9c5146104d3578063f620c8151461051c57600080fd5b8063a3fbbaae14610433578063b390c0ab14610453578063b88d4fde1461047357600080fd5b806395d89b41116100c657806395d89b41146103c957806399f7ab31146103de5780639d1b464a146103fe578063a22cb4651461041357600080fd5b806377119765146103745780638d5555f2146103895780638def9f82146103a957600080fd5b806323b872dd116101595780634737576e116101335780634737576e14610301578063481c6a75146103145780636352211e1461033457806370a082311461035457600080fd5b806323b872dd146102a157806331fd9fd1146102c157806342842e0e146102e157600080fd5b806301ffc9a7146101a15780630561942a146101d657806306fdde0314610200578063081812fc14610222578063095ea7b31461025a57806318160ddd1461027c575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f8a565b610531565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610583565b604080519283526020830191909152016101cd565b34801561020c57600080fd5b506102156105a5565b6040516101cd919061213f565b34801561022e57600080fd5b5061024261023d36600461203f565b610637565b6040516001600160a01b0390911681526020016101cd565b34801561026657600080fd5b5061027a610275366004611f60565b6106c4565b005b34801561028857600080fd5b506007546102939081565b6040519081526020016101cd565b3480156102ad57600080fd5b5061027a6102bc366004611e80565b6107da565b3480156102cd57600080fd5b506101c16102dc366004611e32565b61080b565b3480156102ed57600080fd5b5061027a6102fc366004611e80565b610874565b61029361030f366004611fc4565b61088f565b34801561032057600080fd5b50600954610242906001600160a01b031681565b34801561034057600080fd5b5061024261034f36600461203f565b610a24565b34801561036057600080fd5b5061029361036f366004611e32565b610a9b565b34801561038057600080fd5b50610293610b22565b34801561039557600080fd5b506102936103a436600461203f565b610b35565b3480156103b557600080fd5b506102936103c436600461203f565b610b61565b3480156103d557600080fd5b50610215610b86565b3480156103ea57600080fd5b506101eb6103f936600461203f565b610b95565b34801561040a57600080fd5b50610293610bb5565b34801561041f57600080fd5b5061027a61042e366004611f24565b610bce565b34801561043f57600080fd5b506101c161044e366004611e32565b610c93565b34801561045f57600080fd5b506101c161046e366004612058565b610cfb565b34801561047f57600080fd5b5061027a61048e366004611ebc565b610ddb565b34801561049f57600080fd5b50600854610242906001600160a01b031681565b3480156104bf57600080fd5b506102156104ce36600461203f565b610e13565b3480156104df57600080fd5b506101c16104ee366004611e4d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052857600080fd5b50610293610f91565b60006001600160e01b031982166380ac58cd60e01b148061056257506001600160e01b03198216635b5e139f60e01b145b8061057d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061059d61059260075490565b6103f99060016121f5565b915091509091565b6060600080546105b490612371565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090612371565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050905090565b600061064282610faa565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cf82610a24565b9050806001600160a01b0316836001600160a01b0316141561073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161069f565b336001600160a01b0382161480610759575061075981336104ee565b6107cb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069f565b6107d58383610fc7565b505050565b6107e43382611035565b6108005760405162461bcd60e51b815260040161069f906121a4565b6107d583838361111b565b6008546000906001600160a01b0316331461084e5760405162461bcd60e51b815260206004820152600360248201526227232960e91b604482015260640161069f565b50600880546001600160a01b0319166001600160a01b0392909216919091179055600190565b6107d583838360405180602001604052806000815250610ddb565b60008083336040516020016108a59291906120a6565b604051602081830303815290604052905060006109208461091a84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112bb565b6009549091506001600160a01b038083169116146109655760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b600080610970610583565b909250905061097f81836121f5565b34146109b25760405162461bcd60e51b8152602060048201526002602482015261414960f01b604482015260640161069f565b6109c0600780546001019055565b3394506109cd858061135f565b6109d7858861137d565b6008546109ed906001600160a01b031682611408565b604051349086907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd90600090a35050505092915050565b6000818152600260205260408120546001600160a01b03168061057d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161069f565b60006001600160a01b038216610b065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161069f565b506001600160a01b031660009081526003602052604090205490565b6000610b306103a460075490565b905090565b6000612710610b45600284612264565b610b5790670de0b6b3a764000061230f565b61057d919061220d565b6000806000610b6f84610b95565b9092509050610b7e81836121f5565b949350505050565b6060600180546105b490612371565b600080610ba183610b35565b9150610bae600a8361220d565b9050915091565b6000610b30610bc360075490565b6103a49060016121f5565b6001600160a01b038216331415610c275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009546000906001600160a01b03163314610cd55760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055600190565b600033610d0784610a24565b6001600160a01b031614610d425760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640161069f565b610d4c6007611521565b610d5583611578565b6000610d5f610bb5565b905082811015610d9a5760405162461bcd60e51b815260040161069f906020808252600490820152634d42504960e01b604082015260600190565b610da43382611408565b604051819085907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35060019392505050565b610de53383611035565b610e015760405162461bcd60e51b815260040161069f906121a4565b610e0d848484846115bb565b50505050565b6060610e1e82610faa565b610e845760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161069f565b60008281526006602052604081208054610e9d90612371565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec990612371565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505090506000610f43604080518082019091526007815266697066733a2f2f60c81b602082015290565b9050805160001415610f56575092915050565b815115610f88578082604051602001610f709291906120dd565b60405160208183030381529060405292505050919050565b610b7e846115ee565b6000610b30610f9f60075490565b6103c49060016121f5565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ffc82610a24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061104082610faa565b6110a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069f565b60006110ac83610a24565b9050806001600160a01b0316846001600160a01b031614806110e75750836001600160a01b03166110dc84610637565b6001600160a01b0316145b80610b7e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610b7e565b826001600160a01b031661112e82610a24565b6001600160a01b0316146111965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161069f565b6001600160a01b0382166111f85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161069f565b611203600082610fc7565b6001600160a01b038316600090815260036020526040812080546001929061122c90849061232e565b90915550506001600160a01b038216600090815260036020526040812080546001929061125a9084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008151604114156112ef5760208201516040830151606084015160001a6112e5868285856116d5565b935050505061057d565b815160401415611317576020820151604083015161130e85838361187e565b9250505061057d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161069f565b6113798282604051806020016040528060008152506118a8565b5050565b61138682610faa565b6113e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161069f565b600082815260066020908152604090912082516107d592840190611cb1565b804710156114585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161069f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50509050806107d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161069f565b8054806115705760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161069f565b600019019055565b611581816118db565b6000818152600660205260409020805461159a90612371565b1590506115b85760008181526006602052604081206115b891611d35565b50565b6115c684848461111b565b6115d284848484611976565b610e0d5760405162461bcd60e51b815260040161069f90612152565b60606115f982610faa565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161069f565b6000611683604080518082019091526007815266697066733a2f2f60c81b602082015290565b905060008151116116a357604051806020016040528060008152506116ce565b806116ad84611a80565b6040516020016116be9291906120dd565b6040516020818303038152906040525b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161069f565b8360ff16601b148061176757508360ff16601c145b6117be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161069f565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611812573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161069f565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161189e868287856116d5565b9695505050505050565b6118b28383611b7e565b6118bf6000848484611976565b6107d55760405162461bcd60e51b815260040161069f90612152565b60006118e682610a24565b90506118f3600083610fc7565b6001600160a01b038116600090815260036020526040812080546001929061191c90849061232e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611a7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119ba90339089908890889060040161210c565b602060405180830381600087803b1580156119d457600080fd5b505af1925050508015611a04575060408051601f3d908101601f19168201909252611a0191810190611fa7565b60015b611a5e573d808015611a32576040519150601f19603f3d011682016040523d82523d6000602084013e611a37565b606091505b508051611a565760405162461bcd60e51b815260040161069f90612152565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7e565b506001610b7e565b606081611aa45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ace5780611ab8816123ac565b9150611ac79050600a8361220d565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae961241d565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610b7e57611b2860018361232e565b9150611b35600a866123c7565b611b409060306121f5565b60f81b818381518110611b5557611b55612407565b60200101906001600160f81b031916908160001a905350611b77600a8661220d565b9450611b17565b6001600160a01b038216611bd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069f565b611bdd81610faa565b15611c2a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069f565b6001600160a01b0382166000908152600360205260408120805460019290611c539084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611cbd90612371565b90600052602060002090601f016020900481019282611cdf5760008555611d25565b82601f10611cf857805160ff1916838001178555611d25565b82800160010185558215611d25579182015b82811115611d25578251825591602001919060010190611d0a565b50611d31929150611d6b565b5090565b508054611d4190612371565b6000825580601f10611d51575050565b601f0160209004906000526020600020908101906115b891905b5b80821115611d315760008155600101611d6c565b600067ffffffffffffffff80841115611d9b57611d9b61241d565b604051601f8501601f19908116603f01168101908282118183101715611dc357611dc361241d565b81604052809350858152868686011115611ddc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b600082601f830112611e2357600080fd5b6116ce83833560208501611d80565b600060208284031215611e4457600080fd5b6116ce82611df6565b60008060408385031215611e6057600080fd5b611e6983611df6565b9150611e7760208401611df6565b90509250929050565b600080600060608486031215611e9557600080fd5b611e9e84611df6565b9250611eac60208501611df6565b9150604084013590509250925092565b60008060008060808587031215611ed257600080fd5b611edb85611df6565b9350611ee960208601611df6565b925060408501359150606085013567ffffffffffffffff811115611f0c57600080fd5b611f1887828801611e12565b91505092959194509250565b60008060408385031215611f3757600080fd5b611f4083611df6565b915060208301358015158114611f5557600080fd5b809150509250929050565b60008060408385031215611f7357600080fd5b611f7c83611df6565b946020939093013593505050565b600060208284031215611f9c57600080fd5b81356116ce81612433565b600060208284031215611fb957600080fd5b81516116ce81612433565b60008060408385031215611fd757600080fd5b823567ffffffffffffffff80821115611fef57600080fd5b818501915085601f83011261200357600080fd5b61201286833560208501611d80565b9350602085013591508082111561202857600080fd5b5061203585828601611e12565b9150509250929050565b60006020828403121561205157600080fd5b5035919050565b6000806040838503121561206b57600080fd5b50508035926020909101359150565b60008151808452612092816020860160208601612345565b601f01601f19169290920160200192915050565b600083516120b8818460208801612345565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516120ef818460208801612345565b835190830190612103818360208801612345565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061189e9083018461207a565b6020815260006116ce602083018461207a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612208576122086123db565b500190565b60008261221c5761221c6123f1565b500490565b600181815b8085111561225c578160001904821115612242576122426123db565b8085161561224f57918102915b93841c9390800290612226565b509250929050565b60006116ce60ff84168360008261227d5750600161057d565b8161228a5750600061057d565b81600181146122a057600281146122aa576122c6565b600191505061057d565b60ff8411156122bb576122bb6123db565b50506001821b61057d565b5060208310610133831016604e8410600b84101617156122e9575081810a61057d565b6122f38383612221565b8060001904821115612307576123076123db565b029392505050565b6000816000190483118215151615612329576123296123db565b500290565b600082821015612340576123406123db565b500390565b60005b83811015612360578181015183820152602001612348565b83811115610e0d5750506000910152565b600181811c9082168061238557607f821691505b602082108114156123a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123c0576123c06123db565b5060010190565b6000826123d6576123d66123f1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115b857600080fdfea2646970667358221220b1eae1411e039c77b744d2005dac8843c45f41020cafa3325ed5f0eb23b8884764736f6c63430008060033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_1979": {
              "entryPoint": null,
              "id": 1979,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_62": {
              "entryPoint": null,
              "id": 62,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_decode_tuple_t_addresst_address_payable_fromMemory": {
              "entryPoint": 374,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "extract_byte_array_length": {
              "entryPoint": 437,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "validator_revert_address": {
              "entryPoint": 498,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:930:13",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:13",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "120:287:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "166:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "175:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "178:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "168:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "168:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "168:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "141:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "150:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "137:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "137:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "162:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "130:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "191:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "210:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "204:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "204:16:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "195:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "254:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "229:24:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "229:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "229:31:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "269:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "279:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "269:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "293:40:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "318:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "329:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "314:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "314:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "308:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "308:25:13"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "297:7:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "367:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "342:24:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "342:33:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "342:33:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "384:17:13",
                          "value": {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "394:7:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "384:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address_payable_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "78:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "89:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "101:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "109:6:13",
                        "type": ""
                      }
                    ],
                    "src": "14:393:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "467:325:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "477:22:13",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "491:1:13",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "494:4:13"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "487:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "487:12:13"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "477:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "508:38:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "538:4:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "544:1:13",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "534:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "534:12:13"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "512:18:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "585:31:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "587:27:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "601:6:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "609:4:13",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "597:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "597:17:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "587:6:13"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "565:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "558:26:13"
                          },
                          "nodeType": "YulIf",
                          "src": "555:2:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "675:111:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "696:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "703:3:13",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "708:10:13",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "699:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "699:20:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "689:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "689:31:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "689:31:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "740:1:13",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "743:4:13",
                                      "type": "",
                                      "value": "0x22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "733:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "733:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "733:15:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "768:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "771:4:13",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "761:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "761:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "761:15:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "631:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "654:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "662:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "651:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "651:14:13"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "628:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "628:38:13"
                          },
                          "nodeType": "YulIf",
                          "src": "625:2:13"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "447:4:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "456:6:13",
                        "type": ""
                      }
                    ],
                    "src": "412:380:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "842:86:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "906:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "915:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "918:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "908:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "908:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "908:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "865:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "891:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "896:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "887:3:13"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "887:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "900:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "883:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "883:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "872:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "872:31:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "862:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "862:42:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "855:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "855:50:13"
                          },
                          "nodeType": "YulIf",
                          "src": "852:2:13"
                        }
                      ]
                    },
                    "name": "validator_revert_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "831:5:13",
                        "type": ""
                      }
                    ],
                    "src": "797:131:13"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
              "id": 13,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60806040523480156200001157600080fd5b506040516200269a3803806200269a833981016040819052620000349162000176565b604080518082018252600a8152694176616e74476172646560b01b60208083019182528351808501909452600384526241564760e81b9084015281519192916200008191600091620000d0565b50805162000097906001906020840190620000d0565b5050600980546001600160a01b039485166001600160a01b0319918216179091556008805493909416921691909117909155506200020b565b828054620000de90620001b5565b90600052602060002090601f0160209004810192826200010257600085556200014d565b82601f106200011d57805160ff19168380011785556200014d565b828001600101855582156200014d579182015b828111156200014d57825182559160200191906001019062000130565b506200015b9291506200015f565b5090565b5b808211156200015b576000815560010162000160565b600080604083850312156200018a57600080fd5b82516200019781620001f2565b6020840151909250620001aa81620001f2565b809150509250929050565b600181811c90821680620001ca57607f821691505b60208210811415620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200020857600080fd5b50565b61247f806200021b6000396000f3fe60806040526004361061019c5760003560e01c806377119765116100ec578063a3fbbaae1161008a578063bca93cf511610064578063bca93cf514610493578063c87b56dd146104b3578063e985e9c5146104d3578063f620c8151461051c57600080fd5b8063a3fbbaae14610433578063b390c0ab14610453578063b88d4fde1461047357600080fd5b806395d89b41116100c657806395d89b41146103c957806399f7ab31146103de5780639d1b464a146103fe578063a22cb4651461041357600080fd5b806377119765146103745780638d5555f2146103895780638def9f82146103a957600080fd5b806323b872dd116101595780634737576e116101335780634737576e14610301578063481c6a75146103145780636352211e1461033457806370a082311461035457600080fd5b806323b872dd146102a157806331fd9fd1146102c157806342842e0e146102e157600080fd5b806301ffc9a7146101a15780630561942a146101d657806306fdde0314610200578063081812fc14610222578063095ea7b31461025a57806318160ddd1461027c575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f8a565b610531565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610583565b604080519283526020830191909152016101cd565b34801561020c57600080fd5b506102156105a5565b6040516101cd919061213f565b34801561022e57600080fd5b5061024261023d36600461203f565b610637565b6040516001600160a01b0390911681526020016101cd565b34801561026657600080fd5b5061027a610275366004611f60565b6106c4565b005b34801561028857600080fd5b506007546102939081565b6040519081526020016101cd565b3480156102ad57600080fd5b5061027a6102bc366004611e80565b6107da565b3480156102cd57600080fd5b506101c16102dc366004611e32565b61080b565b3480156102ed57600080fd5b5061027a6102fc366004611e80565b610874565b61029361030f366004611fc4565b61088f565b34801561032057600080fd5b50600954610242906001600160a01b031681565b34801561034057600080fd5b5061024261034f36600461203f565b610a24565b34801561036057600080fd5b5061029361036f366004611e32565b610a9b565b34801561038057600080fd5b50610293610b22565b34801561039557600080fd5b506102936103a436600461203f565b610b35565b3480156103b557600080fd5b506102936103c436600461203f565b610b61565b3480156103d557600080fd5b50610215610b86565b3480156103ea57600080fd5b506101eb6103f936600461203f565b610b95565b34801561040a57600080fd5b50610293610bb5565b34801561041f57600080fd5b5061027a61042e366004611f24565b610bce565b34801561043f57600080fd5b506101c161044e366004611e32565b610c93565b34801561045f57600080fd5b506101c161046e366004612058565b610cfb565b34801561047f57600080fd5b5061027a61048e366004611ebc565b610ddb565b34801561049f57600080fd5b50600854610242906001600160a01b031681565b3480156104bf57600080fd5b506102156104ce36600461203f565b610e13565b3480156104df57600080fd5b506101c16104ee366004611e4d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052857600080fd5b50610293610f91565b60006001600160e01b031982166380ac58cd60e01b148061056257506001600160e01b03198216635b5e139f60e01b145b8061057d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061059d61059260075490565b6103f99060016121f5565b915091509091565b6060600080546105b490612371565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090612371565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050905090565b600061064282610faa565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cf82610a24565b9050806001600160a01b0316836001600160a01b0316141561073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161069f565b336001600160a01b0382161480610759575061075981336104ee565b6107cb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069f565b6107d58383610fc7565b505050565b6107e43382611035565b6108005760405162461bcd60e51b815260040161069f906121a4565b6107d583838361111b565b6008546000906001600160a01b0316331461084e5760405162461bcd60e51b815260206004820152600360248201526227232960e91b604482015260640161069f565b50600880546001600160a01b0319166001600160a01b0392909216919091179055600190565b6107d583838360405180602001604052806000815250610ddb565b60008083336040516020016108a59291906120a6565b604051602081830303815290604052905060006109208461091a84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112bb565b6009549091506001600160a01b038083169116146109655760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b600080610970610583565b909250905061097f81836121f5565b34146109b25760405162461bcd60e51b8152602060048201526002602482015261414960f01b604482015260640161069f565b6109c0600780546001019055565b3394506109cd858061135f565b6109d7858861137d565b6008546109ed906001600160a01b031682611408565b604051349086907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd90600090a35050505092915050565b6000818152600260205260408120546001600160a01b03168061057d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161069f565b60006001600160a01b038216610b065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161069f565b506001600160a01b031660009081526003602052604090205490565b6000610b306103a460075490565b905090565b6000612710610b45600284612264565b610b5790670de0b6b3a764000061230f565b61057d919061220d565b6000806000610b6f84610b95565b9092509050610b7e81836121f5565b949350505050565b6060600180546105b490612371565b600080610ba183610b35565b9150610bae600a8361220d565b9050915091565b6000610b30610bc360075490565b6103a49060016121f5565b6001600160a01b038216331415610c275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009546000906001600160a01b03163314610cd55760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055600190565b600033610d0784610a24565b6001600160a01b031614610d425760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640161069f565b610d4c6007611521565b610d5583611578565b6000610d5f610bb5565b905082811015610d9a5760405162461bcd60e51b815260040161069f906020808252600490820152634d42504960e01b604082015260600190565b610da43382611408565b604051819085907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35060019392505050565b610de53383611035565b610e015760405162461bcd60e51b815260040161069f906121a4565b610e0d848484846115bb565b50505050565b6060610e1e82610faa565b610e845760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161069f565b60008281526006602052604081208054610e9d90612371565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec990612371565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505090506000610f43604080518082019091526007815266697066733a2f2f60c81b602082015290565b9050805160001415610f56575092915050565b815115610f88578082604051602001610f709291906120dd565b60405160208183030381529060405292505050919050565b610b7e846115ee565b6000610b30610f9f60075490565b6103c49060016121f5565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ffc82610a24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061104082610faa565b6110a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069f565b60006110ac83610a24565b9050806001600160a01b0316846001600160a01b031614806110e75750836001600160a01b03166110dc84610637565b6001600160a01b0316145b80610b7e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610b7e565b826001600160a01b031661112e82610a24565b6001600160a01b0316146111965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161069f565b6001600160a01b0382166111f85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161069f565b611203600082610fc7565b6001600160a01b038316600090815260036020526040812080546001929061122c90849061232e565b90915550506001600160a01b038216600090815260036020526040812080546001929061125a9084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008151604114156112ef5760208201516040830151606084015160001a6112e5868285856116d5565b935050505061057d565b815160401415611317576020820151604083015161130e85838361187e565b9250505061057d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161069f565b6113798282604051806020016040528060008152506118a8565b5050565b61138682610faa565b6113e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161069f565b600082815260066020908152604090912082516107d592840190611cb1565b804710156114585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161069f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50509050806107d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161069f565b8054806115705760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161069f565b600019019055565b611581816118db565b6000818152600660205260409020805461159a90612371565b1590506115b85760008181526006602052604081206115b891611d35565b50565b6115c684848461111b565b6115d284848484611976565b610e0d5760405162461bcd60e51b815260040161069f90612152565b60606115f982610faa565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161069f565b6000611683604080518082019091526007815266697066733a2f2f60c81b602082015290565b905060008151116116a357604051806020016040528060008152506116ce565b806116ad84611a80565b6040516020016116be9291906120dd565b6040516020818303038152906040525b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161069f565b8360ff16601b148061176757508360ff16601c145b6117be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161069f565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611812573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161069f565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161189e868287856116d5565b9695505050505050565b6118b28383611b7e565b6118bf6000848484611976565b6107d55760405162461bcd60e51b815260040161069f90612152565b60006118e682610a24565b90506118f3600083610fc7565b6001600160a01b038116600090815260036020526040812080546001929061191c90849061232e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611a7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119ba90339089908890889060040161210c565b602060405180830381600087803b1580156119d457600080fd5b505af1925050508015611a04575060408051601f3d908101601f19168201909252611a0191810190611fa7565b60015b611a5e573d808015611a32576040519150601f19603f3d011682016040523d82523d6000602084013e611a37565b606091505b508051611a565760405162461bcd60e51b815260040161069f90612152565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7e565b506001610b7e565b606081611aa45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ace5780611ab8816123ac565b9150611ac79050600a8361220d565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae961241d565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610b7e57611b2860018361232e565b9150611b35600a866123c7565b611b409060306121f5565b60f81b818381518110611b5557611b55612407565b60200101906001600160f81b031916908160001a905350611b77600a8661220d565b9450611b17565b6001600160a01b038216611bd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069f565b611bdd81610faa565b15611c2a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069f565b6001600160a01b0382166000908152600360205260408120805460019290611c539084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611cbd90612371565b90600052602060002090601f016020900481019282611cdf5760008555611d25565b82601f10611cf857805160ff1916838001178555611d25565b82800160010185558215611d25579182015b82811115611d25578251825591602001919060010190611d0a565b50611d31929150611d6b565b5090565b508054611d4190612371565b6000825580601f10611d51575050565b601f0160209004906000526020600020908101906115b891905b5b80821115611d315760008155600101611d6c565b600067ffffffffffffffff80841115611d9b57611d9b61241d565b604051601f8501601f19908116603f01168101908282118183101715611dc357611dc361241d565b81604052809350858152868686011115611ddc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b600082601f830112611e2357600080fd5b6116ce83833560208501611d80565b600060208284031215611e4457600080fd5b6116ce82611df6565b60008060408385031215611e6057600080fd5b611e6983611df6565b9150611e7760208401611df6565b90509250929050565b600080600060608486031215611e9557600080fd5b611e9e84611df6565b9250611eac60208501611df6565b9150604084013590509250925092565b60008060008060808587031215611ed257600080fd5b611edb85611df6565b9350611ee960208601611df6565b925060408501359150606085013567ffffffffffffffff811115611f0c57600080fd5b611f1887828801611e12565b91505092959194509250565b60008060408385031215611f3757600080fd5b611f4083611df6565b915060208301358015158114611f5557600080fd5b809150509250929050565b60008060408385031215611f7357600080fd5b611f7c83611df6565b946020939093013593505050565b600060208284031215611f9c57600080fd5b81356116ce81612433565b600060208284031215611fb957600080fd5b81516116ce81612433565b60008060408385031215611fd757600080fd5b823567ffffffffffffffff80821115611fef57600080fd5b818501915085601f83011261200357600080fd5b61201286833560208501611d80565b9350602085013591508082111561202857600080fd5b5061203585828601611e12565b9150509250929050565b60006020828403121561205157600080fd5b5035919050565b6000806040838503121561206b57600080fd5b50508035926020909101359150565b60008151808452612092816020860160208601612345565b601f01601f19169290920160200192915050565b600083516120b8818460208801612345565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516120ef818460208801612345565b835190830190612103818360208801612345565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061189e9083018461207a565b6020815260006116ce602083018461207a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612208576122086123db565b500190565b60008261221c5761221c6123f1565b500490565b600181815b8085111561225c578160001904821115612242576122426123db565b8085161561224f57918102915b93841c9390800290612226565b509250929050565b60006116ce60ff84168360008261227d5750600161057d565b8161228a5750600061057d565b81600181146122a057600281146122aa576122c6565b600191505061057d565b60ff8411156122bb576122bb6123db565b50506001821b61057d565b5060208310610133831016604e8410600b84101617156122e9575081810a61057d565b6122f38383612221565b8060001904821115612307576123076123db565b029392505050565b6000816000190483118215151615612329576123296123db565b500290565b600082821015612340576123406123db565b500390565b60005b83811015612360578181015183820152602001612348565b83811115610e0d5750506000910152565b600181811c9082168061238557607f821691505b602082108114156123a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123c0576123c06123db565b5060010190565b6000826123d6576123d66123f1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115b857600080fdfea2646970667358221220b1eae1411e039c77b744d2005dac8843c45f41020cafa3325ed5f0eb23b8884764736f6c63430008060033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x269A CODESIZE SUB DUP1 PUSH3 0x269A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x176 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x4176616E744761726465 PUSH1 0xB0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH3 0x415647 PUSH1 0xE8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x81 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0xD0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x97 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xD0 JUMP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x20B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xDE SWAP1 PUSH3 0x1B5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x102 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x11D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x14D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x14D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x130 JUMP JUMPDEST POP PUSH3 0x15B SWAP3 SWAP2 POP PUSH3 0x15F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x15B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x160 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x197 DUP2 PUSH3 0x1F2 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x1AA DUP2 PUSH3 0x1F2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x247F DUP1 PUSH3 0x21B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77119765 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xA3FBBAAE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBCA93CF5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBCA93CF5 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xF620C815 EQ PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3FBBAAE EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xB390C0AB EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x99F7AB31 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77119765 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x8D5555F2 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x8DEF9F82 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4737576E GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4737576E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x31FD9FD1 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x561942A EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x293 SWAP1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x242 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0xB86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xBB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x46E CALLDATASIZE PUSH1 0x4 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xDDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x242 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x562 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x57D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59D PUSH2 0x592 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F9 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x5B4 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E0 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x602 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x610 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CF DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x759 DUP2 CALLER PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E4 CALLER DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 DUP4 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x272329 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A5 SWAP3 SWAP2 SWAP1 PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x920 DUP5 PUSH2 0x91A DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x970 PUSH2 0x583 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x97F DUP2 DUP4 PUSH2 0x21F5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4149 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP5 POP PUSH2 0x9CD DUP6 DUP1 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x9D7 DUP6 DUP9 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x9ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE SWAP1 DUP7 SWAP1 PUSH32 0x8A9DCF4E150B1153011B29FEC302D5BE0C13E84FA8F56AB78587F778A32A90DD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0x3A4 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xB45 PUSH1 0x2 DUP5 PUSH2 0x2264 JUMP JUMPDEST PUSH2 0xB57 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x230F JUMP JUMPDEST PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB6F DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB7E DUP2 DUP4 PUSH2 0x21F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x5B4 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBA1 DUP4 PUSH2 0xB35 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAE PUSH1 0xA DUP4 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0xBC3 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3A4 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD07 DUP5 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xD4C PUSH1 0x7 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0xD55 DUP4 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xD9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x4D425049 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDA4 CALLER DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xCEC1BAE6E024D929F2929F3478CE70F55F9C636C8EF7B5073A61D7C3A432451B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDE5 CALLER DUP4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0xE0D DUP5 DUP5 DUP5 DUP5 PUSH2 0x15BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE1E DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE9D SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEC9 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF16 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF16 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF43 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xF56 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF88 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF70 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7E DUP5 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0xF9F PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3C4 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xFFC DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x10E7 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10DC DUP5 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xB7E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB7E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x112E DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x0 DUP3 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x122C SWAP1 DUP5 SWAP1 PUSH2 0x232E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x125A SWAP1 DUP5 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x12E5 DUP7 DUP3 DUP6 DUP6 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x57D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x1317 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x130E DUP6 DUP4 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1379 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1386 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x13E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x7D5 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1581 DUP2 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x159A SWAP1 PUSH2 0x2371 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x15B8 SWAP2 PUSH2 0x1D35 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15C6 DUP5 DUP5 DUP5 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x15D2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F9 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1683 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16CE JUMP JUMPDEST DUP1 PUSH2 0x16AD DUP5 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16BE SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x1767 JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x17BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 AND PUSH1 0xFF DUP4 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x189E DUP7 DUP3 DUP8 DUP6 PUSH2 0x16D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B2 DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x18BF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x191C SWAP1 DUP5 SWAP1 PUSH2 0x232E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1A78 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x19BA SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x210C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A04 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A01 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xB7E JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1AA4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1ACE JUMPI DUP1 PUSH2 0x1AB8 DUP2 PUSH2 0x23AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x220D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE9 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xB7E JUMPI PUSH2 0x1B28 PUSH1 0x1 DUP4 PUSH2 0x232E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B35 PUSH1 0xA DUP7 PUSH2 0x23C7 JUMP JUMPDEST PUSH2 0x1B40 SWAP1 PUSH1 0x30 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B77 PUSH1 0xA DUP7 PUSH2 0x220D JUMP JUMPDEST SWAP5 POP PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0xFAA JUMP JUMPDEST ISZERO PUSH2 0x1C2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1C53 SWAP1 DUP5 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CBD SWAP1 PUSH2 0x2371 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D25 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1CF8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D25 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D25 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D25 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D0A JUMP JUMPDEST POP PUSH2 0x1D31 SWAP3 SWAP2 POP PUSH2 0x1D6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1D41 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1D51 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15B8 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9B PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC3 PUSH2 0x241D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1DDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP3 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E69 DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E77 PUSH1 0x20 DUP5 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9E DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EAC PUSH1 0x20 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EDB DUP6 PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE9 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F18 DUP8 DUP3 DUP9 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F40 DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7C DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16CE DUP2 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16CE DUP2 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2012 DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x206B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2092 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x20B8 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x20EF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2103 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x189E SWAP1 DUP4 ADD DUP5 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x23DB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x221C JUMPI PUSH2 0x221C PUSH2 0x23F1 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x225C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2242 PUSH2 0x23DB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x224F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CE PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x227D JUMPI POP PUSH1 0x1 PUSH2 0x57D JUMP JUMPDEST DUP2 PUSH2 0x228A JUMPI POP PUSH1 0x0 PUSH2 0x57D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22A0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x22AA JUMPI PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x57D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x22BB JUMPI PUSH2 0x22BB PUSH2 0x23DB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x22E9 JUMPI POP DUP2 DUP2 EXP PUSH2 0x57D JUMP JUMPDEST PUSH2 0x22F3 DUP4 DUP4 PUSH2 0x2221 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2307 PUSH2 0x23DB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2329 JUMPI PUSH2 0x2329 PUSH2 0x23DB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x2340 PUSH2 0x23DB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2360 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2348 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE0D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23C0 PUSH2 0x23DB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23D6 JUMPI PUSH2 0x23D6 PUSH2 0x23F1 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEA 0xE1 COINBASE 0x1E SUB SWAP13 PUSH24 0xB744D2005DAC8843C45F41020CAFA3325ED5F0EB23B88847 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
          "sourceMap": "312:3140:12:-:0;;;738:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:113:0;;;;;;;;;;;-1:-1:-1;;;1316:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1316:113:0;;;;1382:13;;1316:113;;;1382:13;;-1:-1:-1;;1382:13:0;:::i;:::-;-1:-1:-1;1405:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;833:7:12::1;:18:::0;;-1:-1:-1;;;;;833:18:12;;::::1;-1:-1:-1::0;;;;;;833:18:12;;::::1;;::::0;;;857:12:::1;:28:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;312:3140:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;312:3140:12;;;-1:-1:-1;312:3140:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:393:13;101:6;109;162:2;150:9;141:7;137:23;133:32;130:2;;;178:1;175;168:12;130:2;210:9;204:16;229:31;254:5;229:31;:::i;:::-;329:2;314:18;;308:25;279:5;;-1:-1:-1;342:33:13;308:25;342:33;:::i;:::-;394:7;384:17;;;120:287;;;;;:::o;412:380::-;491:1;487:12;;;;534;;;555:2;;609:4;601:6;597:17;587:27;;555:2;662;654:6;651:14;631:18;628:38;625:2;;;708:10;703:3;699:20;696:1;689:31;743:4;740:1;733:15;771:4;768:1;761:15;625:2;;467:325;;;:::o;797:131::-;-1:-1:-1;;;;;872:31:13;;862:42;;852:2;;918:1;915;908:12;852:2;842:86;:::o;:::-;312:3140:12;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_approve_741": {
              "entryPoint": 4039,
              "id": 741,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_baseURI_2035": {
              "entryPoint": null,
              "id": 2035,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_beforeTokenTransfer_816": {
              "entryPoint": null,
              "id": 816,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_burn_1078": {
              "entryPoint": 5496,
              "id": 1078,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_burn_648": {
              "entryPoint": 6363,
              "id": 648,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_checkOnERC721Received_805": {
              "entryPoint": 6518,
              "id": 805,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@_exists_455": {
              "entryPoint": 4010,
              "id": 455,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_isApprovedOrOwner_496": {
              "entryPoint": 4149,
              "id": 496,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_mint_597": {
              "entryPoint": 7038,
              "id": 597,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_msgSender_1413": {
              "entryPoint": null,
              "id": 1413,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_safeMint_511": {
              "entryPoint": 4959,
              "id": 511,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_safeMint_540": {
              "entryPoint": 6312,
              "id": 540,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_safeTransfer_437": {
              "entryPoint": 5563,
              "id": 437,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_setTokenURI_1048": {
              "entryPoint": 4989,
              "id": 1048,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_transfer_717": {
              "entryPoint": 4379,
              "id": 717,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@approve_259": {
              "entryPoint": 1732,
              "id": 259,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@balanceOf_117": {
              "entryPoint": 2715,
              "id": 117,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@burn_2190": {
              "entryPoint": 3323,
              "id": 2190,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@changeFeesReceiver_2004": {
              "entryPoint": 2059,
              "id": 2004,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@changeManager_2026": {
              "entryPoint": 3219,
              "id": 2026,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@currentBurnPrice_2232": {
              "entryPoint": 2850,
              "id": 2232,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@currentMintPrice_2220": {
              "entryPoint": 1411,
              "id": 2220,
              "parameterSlots": 0,
              "returnSlots": 2
            },
            "@currentMintWithFeesPrice_2246": {
              "entryPoint": 3985,
              "id": 2246,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@currentPrice_2204": {
              "entryPoint": 2997,
              "id": 2204,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@current_1441": {
              "entryPoint": null,
              "id": 1441,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@decrement_1483": {
              "entryPoint": 5409,
              "id": 1483,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@feesReceiver_1957": {
              "entryPoint": null,
              "id": 1957,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@getApproved_280": {
              "entryPoint": 1591,
              "id": 280,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@increment_1455": {
              "entryPoint": null,
              "id": 1455,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@isApprovedForAll_332": {
              "entryPoint": null,
              "id": 332,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@isContract_1126": {
              "entryPoint": null,
              "id": 1126,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@manager_1959": {
              "entryPoint": null,
              "id": 1959,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@mintPriceFor_2288": {
              "entryPoint": 2965,
              "id": 2288,
              "parameterSlots": 1,
              "returnSlots": 2
            },
            "@mintWithFeesPriceFor_2266": {
              "entryPoint": 2913,
              "id": 2266,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@mint_2133": {
              "entryPoint": 2191,
              "id": 2133,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@name_155": {
              "entryPoint": 1445,
              "id": 155,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@ownerOf_145": {
              "entryPoint": 2596,
              "id": 145,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@priceFor_2307": {
              "entryPoint": 2869,
              "id": 2307,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@recover_1761": {
              "entryPoint": 4795,
              "id": 1761,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@recover_1788": {
              "entryPoint": 6270,
              "id": 1788,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@recover_1845": {
              "entryPoint": 5845,
              "id": 1845,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@safeTransferFrom_378": {
              "entryPoint": 2164,
              "id": 378,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@safeTransferFrom_408": {
              "entryPoint": 3547,
              "id": 408,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@sendValue_1160": {
              "entryPoint": 5128,
              "id": 1160,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@setApprovalForAll_314": {
              "entryPoint": 3022,
              "id": 314,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@supportsInterface_1906": {
              "entryPoint": null,
              "id": 1906,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@supportsInterface_93": {
              "entryPoint": 1329,
              "id": 93,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@symbol_165": {
              "entryPoint": 2950,
              "id": 165,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@toEthSignedMessageHash_1862": {
              "entryPoint": null,
              "id": 1862,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@toString_1582": {
              "entryPoint": 6784,
              "id": 1582,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@tokenURI_1026": {
              "entryPoint": 3603,
              "id": 1026,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@tokenURI_207": {
              "entryPoint": 5614,
              "id": 207,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@totalSupply_1952": {
              "entryPoint": null,
              "id": 1952,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@transferFrom_359": {
              "entryPoint": 2010,
              "id": 359,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "abi_decode_address": {
              "entryPoint": 7670,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_available_length_bytes": {
              "entryPoint": 7552,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_bytes": {
              "entryPoint": 7698,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 7730,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 7757,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_uint256": {
              "entryPoint": 7808,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
              "entryPoint": 7868,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_addresst_bool": {
              "entryPoint": 7972,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 8032,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes4": {
              "entryPoint": 8074,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes4_fromMemory": {
              "entryPoint": 8103,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr": {
              "entryPoint": 8132,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 8255,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256t_uint256": {
              "entryPoint": 8280,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_encode_bytes": {
              "entryPoint": 8314,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 8358,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 8413,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 8460,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 8511,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 8530,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1ecee85901464eb55b9fc9600d861404e9f56e1735960e526543480601166024__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_be4ca857a9374b374f60782c442e86281fd7c969d48d41605e609ae689d56c9c__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 8612,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_e5439dd242b37a228f8113c5d8af847e6480904604de316eb968c5572a5a6bd8__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 8693,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 8717,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_exp_helper": {
              "entryPoint": 8737,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "checked_exp_t_uint256_t_uint8": {
              "entryPoint": 8804,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_exp_unsigned": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 8975,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint256": {
              "entryPoint": 9006,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "copy_memory_to_memory": {
              "entryPoint": 9029,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 9073,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "increment_t_uint256": {
              "entryPoint": 9132,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "mod_t_uint256": {
              "entryPoint": 9159,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 9179,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x12": {
              "entryPoint": 9201,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": 9223,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 9245,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "validator_revert_bytes4": {
              "entryPoint": 9267,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:22818:13",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:13",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "88:557:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "98:28:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "108:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "102:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "153:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "155:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "155:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "155:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "141:6:13"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "149:2:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "138:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "138:14:13"
                          },
                          "nodeType": "YulIf",
                          "src": "135:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "184:17:13",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "198:2:13",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "194:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "194:7:13"
                          },
                          "variables": [
                            {
                              "name": "_2",
                              "nodeType": "YulTypedName",
                              "src": "188:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "210:23:13",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "230:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "224:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:9:13"
                          },
                          "variables": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulTypedName",
                              "src": "214:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "242:73:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "264:6:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "288:6:13"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "296:2:13",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "284:3:13"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "284:15:13"
                                          },
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "301:2:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "280:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "280:24:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "306:2:13",
                                        "type": "",
                                        "value": "63"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "276:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "276:33:13"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "311:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "272:42:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "260:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "260:55:13"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "246:10:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "374:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "376:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "376:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "376:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "333:10:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "345:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "330:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "353:10:13"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "350:22:13"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "327:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "327:46:13"
                          },
                          "nodeType": "YulIf",
                          "src": "324:2:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "412:2:13",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "416:10:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "405:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "405:22:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "405:22:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "436:15:13",
                          "value": {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:13"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "436:5:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "467:6:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "475:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "460:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "460:22:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "460:22:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "520:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "529:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "532:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "522:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "522:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "501:3:13"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "506:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "497:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "497:16:13"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "515:3:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "494:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "494:25:13"
                          },
                          "nodeType": "YulIf",
                          "src": "491:2:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "562:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "570:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "558:17:13"
                              },
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "577:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "582:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nodeType": "YulIdentifier",
                              "src": "545:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "545:44:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "545:44:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "613:6:13"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "621:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "609:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "609:19:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "630:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:30:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "637:1:13",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "598:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "598:41:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "598:41:13"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_bytes",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "57:3:13",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "62:6:13",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "70:3:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "78:5:13",
                        "type": ""
                      }
                    ],
                    "src": "14:631:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "699:124:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "709:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "731:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "718:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "718:20:13"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "709:5:13"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "801:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "810:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "813:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "803:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "803:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "803:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "760:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "771:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "786:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "791:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "782:3:13"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "782:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "795:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "778:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "778:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "767:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "767:31:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "757:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "757:42:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "750:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "750:50:13"
                          },
                          "nodeType": "YulIf",
                          "src": "747:2:13"
                        }
                      ]
                    },
                    "name": "abi_decode_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "678:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "689:5:13",
                        "type": ""
                      }
                    ],
                    "src": "650:173:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "880:168:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "929:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "938:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "941:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "931:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "931:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "931:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "908:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "916:4:13",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "904:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "904:17:13"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "923:3:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "900:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "900:27:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "893:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "893:35:13"
                          },
                          "nodeType": "YulIf",
                          "src": "890:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "954:88:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1001:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1009:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "997:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "997:17:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1029:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1016:12:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1016:20:13"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1038:3:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "963:33:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "963:79:13"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "954:5:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_bytes",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "854:6:13",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "862:3:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "870:5:13",
                        "type": ""
                      }
                    ],
                    "src": "828:220:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1123:116:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1169:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1178:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1181:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1171:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1171:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1171:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1144:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1153:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1140:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1140:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1165:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1136:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1136:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1133:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1194:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1223:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "1204:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1204:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1194:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1089:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1100:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1112:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1053:186:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1331:173:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1377:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1386:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1389:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1379:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1379:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1379:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1352:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1361:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1348:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1348:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1373:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1344:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1344:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1341:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1402:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1431:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "1412:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1412:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1402:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1450:48:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1483:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1494:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1479:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1479:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "1460:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1460:38:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1450:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1289:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1300:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1312:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1320:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1244:260:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1613:224:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1659:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1668:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1671:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1661:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1661:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1661:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1634:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1643:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1630:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1630:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1655:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1626:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1626:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1623:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1684:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1713:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "1694:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1694:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1684:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1732:48:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1765:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1776:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1761:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1761:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "1742:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1742:38:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1732:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1789:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1816:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1827:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1812:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1812:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1799:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1799:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1789:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1563:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1574:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1586:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1594:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1602:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1509:328:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1972:407:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2019:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2028:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2031:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2021:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2021:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2021:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1993:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2002:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1989:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1989:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2014:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1985:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1985:33:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1982:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2044:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2073:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "2054:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2054:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2044:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2092:48:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2125:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2136:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2121:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2121:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "2102:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2102:38:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2092:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2149:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2176:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2187:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2172:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2172:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2159:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2159:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2149:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2200:46:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2231:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2242:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2227:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2227:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2214:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2214:32:13"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "2204:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2289:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2298:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2301:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2291:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2291:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2291:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2261:6:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2269:18:13",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2258:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2258:30:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2255:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2314:59:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2345:9:13"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2356:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2341:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2341:22:13"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2365:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "2324:16:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2324:49:13"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2314:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1914:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1925:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1937:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1945:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1953:6:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "1961:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1842:537:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2468:263:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2514:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2523:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2526:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2516:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2516:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2516:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2489:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2498:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2485:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2485:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2510:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2481:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2481:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2478:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2539:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2568:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "2549:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2549:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2539:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2587:45:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2617:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2628:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2613:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2613:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2600:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2600:32:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "2591:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2685:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2694:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2697:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2687:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2687:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2687:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2675:5:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2668:6:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2668:13:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2661:6:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2661:21:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2651:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2651:32:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2644:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2644:40:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2641:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2710:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2720:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2710:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2426:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2437:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2449:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2457:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2384:347:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2823:167:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2869:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2878:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2881:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2871:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2871:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2871:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2844:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2853:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2840:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2840:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2865:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2836:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2836:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2833:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2894:39:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2923:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "2904:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2904:29:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2894:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2942:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2969:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2980:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2965:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2965:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2952:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2952:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2942:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2781:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2792:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2804:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2812:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2736:254:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3064:176:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3110:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3119:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3122:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3112:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3112:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3112:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3085:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3094:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3081:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3081:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3106:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3077:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3077:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "3074:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3135:36:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3161:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3148:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3148:23:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "3139:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3204:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "3180:23:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3180:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3180:30:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3219:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3229:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3219:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3030:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3041:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3053:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2995:245:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3325:169:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3371:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3380:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3383:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3373:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3373:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3373:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3346:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3355:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3342:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3342:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3367:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3338:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3338:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "3335:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3396:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3415:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3409:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3409:16:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "3400:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3458:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "3434:23:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3434:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3434:30:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3473:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3483:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3473:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3291:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3302:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3314:6:13",
                        "type": ""
                      }
                    ],
                    "src": "3245:249:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3605:567:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3651:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3660:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3663:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3653:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3653:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3653:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3626:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3635:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3622:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3622:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3647:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3618:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3618:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "3615:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3676:37:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3703:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3690:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3690:23:13"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "3680:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3722:28:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "3726:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3777:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3786:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3789:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3779:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3779:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3779:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3765:6:13"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3773:2:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3762:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3762:14:13"
                          },
                          "nodeType": "YulIf",
                          "src": "3759:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3802:32:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3816:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3827:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3812:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3812:22:13"
                          },
                          "variables": [
                            {
                              "name": "_2",
                              "nodeType": "YulTypedName",
                              "src": "3806:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3882:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3891:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3894:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3884:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3884:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3884:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3861:2:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3865:4:13",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3857:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3857:13:13"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3872:7:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3853:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3853:27:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3846:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3846:35:13"
                          },
                          "nodeType": "YulIf",
                          "src": "3843:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3907:85:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3955:2:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3959:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3951:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3951:13:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3979:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3966:12:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3966:16:13"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3984:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "3917:33:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3917:75:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3907:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4001:50:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4034:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4045:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4030:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4030:20:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4017:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4017:34:13"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nodeType": "YulTypedName",
                              "src": "4005:8:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4080:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4089:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4092:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4082:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4082:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4082:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "4066:8:13"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4076:2:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4063:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4063:16:13"
                          },
                          "nodeType": "YulIf",
                          "src": "4060:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4105:61:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4136:9:13"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4147:8:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4132:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4132:24:13"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4158:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "4115:16:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4115:51:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4105:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3563:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3574:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3586:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3594:6:13",
                        "type": ""
                      }
                    ],
                    "src": "3499:673:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4247:110:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4293:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4302:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4305:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4295:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4295:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4295:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4268:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4277:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4264:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4264:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4289:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4260:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4260:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "4257:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4318:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4341:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4328:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4328:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4318:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4213:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4224:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4236:6:13",
                        "type": ""
                      }
                    ],
                    "src": "4177:180:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4449:161:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4495:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4504:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4507:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4497:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4497:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4497:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4470:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4479:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4466:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4466:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4491:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4462:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4462:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "4459:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4520:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4543:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4530:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4530:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4520:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4562:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4589:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4600:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4585:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4585:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4572:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4572:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4562:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4407:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4418:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4430:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4438:6:13",
                        "type": ""
                      }
                    ],
                    "src": "4362:248:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4664:208:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4674:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4694:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4688:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4688:12:13"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "4678:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4716:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4721:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4709:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4709:19:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4709:19:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4763:5:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4770:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4759:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4759:16:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4781:3:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4786:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4777:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4777:14:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4793:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "4737:21:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4737:63:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4737:63:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4809:57:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4824:3:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "4837:6:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4845:2:13",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4833:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4833:15:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4854:2:13",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "4850:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4850:7:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4829:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4829:29:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4820:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4820:39:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4861:4:13",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4816:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4816:50:13"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "4809:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_bytes",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4641:5:13",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "4648:3:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "4656:3:13",
                        "type": ""
                      }
                    ],
                    "src": "4615:257:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5044:250:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5054:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5074:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5068:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5068:13:13"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "5058:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5116:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5124:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5112:17:13"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5131:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5136:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "5090:21:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5090:53:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5090:53:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5152:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5169:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5174:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5165:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5165:16:13"
                          },
                          "variables": [
                            {
                              "name": "end_1",
                              "nodeType": "YulTypedName",
                              "src": "5156:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "5197:5:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5212:2:13",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5216:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5208:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5208:15:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5229:26:13",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5225:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5225:31:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5204:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5204:53:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5190:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5190:68:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5190:68:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5267:21:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "5278:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5285:2:13",
                                "type": "",
                                "value": "20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5274:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5274:14:13"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "5267:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "5012:3:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5017:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5025:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "5036:3:13",
                        "type": ""
                      }
                    ],
                    "src": "4877:417:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5486:283:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5496:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5516:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5510:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5510:13:13"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "5500:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5558:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5566:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5554:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5554:17:13"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5573:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5578:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "5532:21:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5532:53:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5532:53:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5594:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5611:3:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5616:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5607:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5607:16:13"
                          },
                          "variables": [
                            {
                              "name": "end_1",
                              "nodeType": "YulTypedName",
                              "src": "5598:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5632:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5654:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5648:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5648:13:13"
                          },
                          "variables": [
                            {
                              "name": "length_1",
                              "nodeType": "YulTypedName",
                              "src": "5636:8:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5696:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5704:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5692:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5692:17:13"
                              },
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "5711:5:13"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "5718:8:13"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "5670:21:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5670:57:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5670:57:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5736:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "5747:5:13"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "5754:8:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5743:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5743:20:13"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "5736:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "5454:3:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5459:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5467:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "5478:3:13",
                        "type": ""
                      }
                    ],
                    "src": "5299:470:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5994:160:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6011:3:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6016:66:13",
                                "type": "",
                                "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6004:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6004:79:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6004:79:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6103:3:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6108:2:13",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6099:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6099:12:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6113:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6092:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6092:28:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6092:28:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6129:19:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6140:3:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6145:2:13",
                                "type": "",
                                "value": "60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6136:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6136:12:13"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "6129:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "5970:3:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5975:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "5986:3:13",
                        "type": ""
                      }
                    ],
                    "src": "5774:380:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6350:14:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6352:10:13",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6359:3:13"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "6352:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "6334:3:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "6342:3:13",
                        "type": ""
                      }
                    ],
                    "src": "6159:205:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6470:102:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6480:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6492:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6503:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6488:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6488:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6480:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6522:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6537:6:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6553:3:13",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6558:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6549:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6549:11:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6562:1:13",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6545:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6545:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6533:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6533:32:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6515:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6515:51:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6515:51:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6439:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6450:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6461:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6369:203:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6694:102:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6704:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6716:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6727:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6712:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6712:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6704:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6746:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6761:6:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6777:3:13",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6782:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6773:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6773:11:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6786:1:13",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6769:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6769:19:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6757:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6757:32:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6739:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6739:51:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6739:51:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6663:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6674:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6685:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6577:219:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7004:285:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7014:29:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7032:3:13",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7037:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7028:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7028:11:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7041:1:13",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7024:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7024:19:13"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "7018:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7059:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7074:6:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7082:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7070:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7070:15:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7052:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7052:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7052:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7106:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7117:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7102:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7102:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7126:6:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7134:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7122:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7122:15:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7095:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7095:43:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7095:43:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7158:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7169:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7154:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7154:18:13"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7174:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7147:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7147:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7147:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7201:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7212:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7197:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7197:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7217:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7190:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7190:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7190:31:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7230:53:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "7255:6:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7267:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7278:3:13",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7263:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7263:19:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "7238:16:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7238:45:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7230:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6949:9:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "6960:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "6968:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6976:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6984:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6995:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6801:488:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7389:92:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7399:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7411:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7422:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7407:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7407:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7399:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7441:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7466:6:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "7459:6:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7459:14:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7452:6:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7452:22:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7434:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7434:41:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7434:41:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7358:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7369:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7380:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7294:187:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7667:217:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7677:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7689:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7700:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7685:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7685:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7677:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7720:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7731:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7713:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7713:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7713:25:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7758:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7769:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7754:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7754:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7778:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7786:4:13",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7774:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7774:17:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7747:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7747:45:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7747:45:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7812:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7823:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7808:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7808:18:13"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7828:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7801:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7801:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7801:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7855:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7866:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7851:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7851:18:13"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "7871:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7844:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7844:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7844:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7612:9:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "7623:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "7631:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "7639:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7647:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7658:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7486:398:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8010:98:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8027:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8038:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8020:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8020:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8020:21:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8050:52:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8075:6:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8087:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8098:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8083:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8083:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "8058:16:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8058:44:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8050:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7979:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7990:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8001:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7889:219:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8287:174:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8304:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8315:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8297:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8297:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8297:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8338:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8349:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8334:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8334:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8354:2:13",
                                "type": "",
                                "value": "24"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8327:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8327:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8327:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8377:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8388:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8373:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8373:18:13"
                              },
                              {
                                "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8393:26:13",
                                "type": "",
                                "value": "ECDSA: invalid signature"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8366:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8366:54:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8366:54:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8429:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8441:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8452:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8437:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8437:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8429:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8264:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8278:4:13",
                        "type": ""
                      }
                    ],
                    "src": "8113:348:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8640:151:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8657:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8668:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8650:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8650:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8650:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8691:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8702:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8687:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8687:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8707:1:13",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8680:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8680:29:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8680:29:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8729:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8740:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8725:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8725:18:13"
                              },
                              {
                                "hexValue": "4e4f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8745:4:13",
                                "type": "",
                                "value": "NO"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8718:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8718:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8718:32:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8759:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8771:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8782:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8767:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8767:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8759:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8617:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8631:4:13",
                        "type": ""
                      }
                    ],
                    "src": "8466:325:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8970:181:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8987:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8998:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8980:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8980:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8980:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9021:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9032:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9017:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9017:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9037:2:13",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9010:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9010:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9010:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9060:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9071:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9056:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9056:18:13"
                              },
                              {
                                "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9076:33:13",
                                "type": "",
                                "value": "ECDSA: invalid signature length"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9049:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9049:61:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9049:61:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9119:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9131:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9142:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9127:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9127:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9119:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8947:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8961:4:13",
                        "type": ""
                      }
                    ],
                    "src": "8796:355:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9330:177:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9347:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9358:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9340:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9340:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9340:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9381:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9392:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9377:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9377:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9397:2:13",
                                "type": "",
                                "value": "27"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9370:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9370:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9370:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9420:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9431:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9416:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9416:18:13"
                              },
                              {
                                "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9436:29:13",
                                "type": "",
                                "value": "Counter: decrement overflow"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9409:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9409:57:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9409:57:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9475:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9487:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9498:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9483:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9483:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9475:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9307:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9321:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9156:351:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9686:240:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9703:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9714:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9696:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9696:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9696:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9737:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9748:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9733:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9733:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9753:2:13",
                                "type": "",
                                "value": "50"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9726:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9726:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9726:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9776:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9787:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9772:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9772:18:13"
                              },
                              {
                                "hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9792:34:13",
                                "type": "",
                                "value": "ERC721: transfer to non ERC721Re"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9765:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9765:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9765:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9847:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9858:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9843:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9843:18:13"
                              },
                              {
                                "hexValue": "63656976657220696d706c656d656e746572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9863:20:13",
                                "type": "",
                                "value": "ceiver implementer"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9836:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9836:48:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9836:48:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9893:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9905:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9916:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9901:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9901:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9893:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9663:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9677:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9512:414:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10105:151:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10122:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10133:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10115:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10115:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10115:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10156:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10167:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10152:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10152:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10172:1:13",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10145:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10145:29:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10145:29:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10194:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10205:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10190:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10190:18:13"
                              },
                              {
                                "hexValue": "4e4d",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10210:4:13",
                                "type": "",
                                "value": "NM"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10183:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10183:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10183:32:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10224:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10236:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10247:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10232:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10232:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10224:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1ecee85901464eb55b9fc9600d861404e9f56e1735960e526543480601166024__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10082:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10096:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9931:325:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10435:178:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10452:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10463:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10445:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10445:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10445:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10486:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10497:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10482:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10482:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10502:2:13",
                                "type": "",
                                "value": "28"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10475:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10475:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10475:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10525:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10536:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10521:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10521:18:13"
                              },
                              {
                                "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10541:30:13",
                                "type": "",
                                "value": "ERC721: token already minted"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10514:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10514:58:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10514:58:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10581:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10593:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10604:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10589:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10589:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10581:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10412:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10426:4:13",
                        "type": ""
                      }
                    ],
                    "src": "10261:352:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10792:226:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10809:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10820:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10802:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10802:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10802:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10843:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10854:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10839:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10839:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10859:2:13",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10832:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10832:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10832:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10882:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10893:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10878:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10878:18:13"
                              },
                              {
                                "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10898:34:13",
                                "type": "",
                                "value": "ERC721: transfer to the zero add"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10871:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10871:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10871:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10953:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10964:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10949:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10949:18:13"
                              },
                              {
                                "hexValue": "72657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10969:6:13",
                                "type": "",
                                "value": "ress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10942:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10942:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10942:34:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10985:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10997:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11008:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10993:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10993:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10985:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10769:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10783:4:13",
                        "type": ""
                      }
                    ],
                    "src": "10618:400:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11197:175:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11214:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11225:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11207:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11207:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11207:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11248:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11259:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11244:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11244:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11264:2:13",
                                "type": "",
                                "value": "25"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11237:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11237:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11237:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11287:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11298:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11283:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11283:18:13"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11303:27:13",
                                "type": "",
                                "value": "ERC721: approve to caller"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11276:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11276:55:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11276:55:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11340:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11352:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11363:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11348:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11348:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11340:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11174:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11188:4:13",
                        "type": ""
                      }
                    ],
                    "src": "11023:349:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11551:248:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11568:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11579:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11561:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11561:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11561:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11602:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11613:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11598:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11598:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11618:2:13",
                                "type": "",
                                "value": "58"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11591:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11591:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11591:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11641:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11652:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11637:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11637:18:13"
                              },
                              {
                                "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11657:34:13",
                                "type": "",
                                "value": "Address: unable to send value, r"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11630:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11630:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11630:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11712:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11723:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11708:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11708:18:13"
                              },
                              {
                                "hexValue": "6563697069656e74206d61792068617665207265766572746564",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11728:28:13",
                                "type": "",
                                "value": "ecipient may have reverted"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11701:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11701:56:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11701:56:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11766:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11778:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11789:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11774:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11774:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11766:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11528:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11542:4:13",
                        "type": ""
                      }
                    ],
                    "src": "11377:422:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11978:224:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11995:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12006:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11988:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11988:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11988:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12029:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12040:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12025:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12025:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12045:2:13",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12018:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12018:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12018:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12068:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12079:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12064:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12064:18:13"
                              },
                              {
                                "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12084:34:13",
                                "type": "",
                                "value": "ECDSA: invalid signature 's' val"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12057:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12057:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12057:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12139:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12150:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12135:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12135:18:13"
                              },
                              {
                                "hexValue": "7565",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12155:4:13",
                                "type": "",
                                "value": "ue"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12128:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12128:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12128:32:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12169:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12181:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12192:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12177:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12177:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12169:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11955:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11969:4:13",
                        "type": ""
                      }
                    ],
                    "src": "11804:398:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12381:179:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12398:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12409:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12391:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12391:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12391:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12432:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12443:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12428:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12428:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12448:2:13",
                                "type": "",
                                "value": "29"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12421:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12421:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12421:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12471:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12482:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12467:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12467:18:13"
                              },
                              {
                                "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12487:31:13",
                                "type": "",
                                "value": "Address: insufficient balance"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12460:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12460:59:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12460:59:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12528:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12540:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12551:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12536:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12536:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12528:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12358:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "12372:4:13",
                        "type": ""
                      }
                    ],
                    "src": "12207:353:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12739:234:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12756:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12767:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12749:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12749:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12749:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12790:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12801:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12786:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12786:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12806:2:13",
                                "type": "",
                                "value": "44"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12779:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12779:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12779:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12829:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12840:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12825:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12825:18:13"
                              },
                              {
                                "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12845:34:13",
                                "type": "",
                                "value": "ERC721: operator query for nonex"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12818:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12818:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12818:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12900:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12911:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12896:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12896:18:13"
                              },
                              {
                                "hexValue": "697374656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12916:14:13",
                                "type": "",
                                "value": "istent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12889:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12889:42:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12889:42:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12940:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12952:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12963:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12948:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12948:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12940:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12716:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "12730:4:13",
                        "type": ""
                      }
                    ],
                    "src": "12565:408:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13152:246:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13169:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13180:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13162:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13162:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13162:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13203:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13214:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13199:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13199:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13219:2:13",
                                "type": "",
                                "value": "56"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13192:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13192:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13192:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13242:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13253:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13238:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13238:18:13"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13258:34:13",
                                "type": "",
                                "value": "ERC721: approve caller is not ow"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13231:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13231:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13231:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13313:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13324:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13309:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13309:18:13"
                              },
                              {
                                "hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13329:26:13",
                                "type": "",
                                "value": "ner nor approved for all"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13302:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13302:54:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13302:54:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13365:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13377:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13388:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13373:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13373:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13365:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13129:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13143:4:13",
                        "type": ""
                      }
                    ],
                    "src": "12978:420:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13577:232:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13594:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13605:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13587:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13587:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13587:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13628:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13639:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13624:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13624:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13644:2:13",
                                "type": "",
                                "value": "42"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13617:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13617:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13617:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13667:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13678:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13663:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13663:18:13"
                              },
                              {
                                "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13683:34:13",
                                "type": "",
                                "value": "ERC721: balance query for the ze"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13656:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13656:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13656:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13738:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13749:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13734:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13734:18:13"
                              },
                              {
                                "hexValue": "726f2061646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13754:12:13",
                                "type": "",
                                "value": "ro address"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13727:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13727:40:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13727:40:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13776:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13788:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13799:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13784:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13784:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13776:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13554:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13568:4:13",
                        "type": ""
                      }
                    ],
                    "src": "13403:406:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13988:231:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14005:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14016:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13998:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13998:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13998:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14039:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14050:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14035:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14035:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14055:2:13",
                                "type": "",
                                "value": "41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14028:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14028:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14028:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14078:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14089:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14074:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14074:18:13"
                              },
                              {
                                "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14094:34:13",
                                "type": "",
                                "value": "ERC721: owner query for nonexist"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14067:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14067:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14067:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14149:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14160:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14145:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14145:18:13"
                              },
                              {
                                "hexValue": "656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14165:11:13",
                                "type": "",
                                "value": "ent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14138:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14138:39:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14138:39:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14186:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14198:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14209:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14194:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14194:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14186:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13965:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13979:4:13",
                        "type": ""
                      }
                    ],
                    "src": "13814:405:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14398:236:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14415:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14426:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14408:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14408:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14408:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14449:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14460:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14445:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14445:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14465:2:13",
                                "type": "",
                                "value": "46"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14438:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14438:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14438:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14488:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14499:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14484:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14484:18:13"
                              },
                              {
                                "hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14504:34:13",
                                "type": "",
                                "value": "ERC721URIStorage: URI set of non"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14477:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14477:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14477:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14559:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14570:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14555:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14555:18:13"
                              },
                              {
                                "hexValue": "6578697374656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14575:16:13",
                                "type": "",
                                "value": "existent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14548:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14548:44:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14548:44:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14601:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14613:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14624:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14609:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14609:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14601:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14375:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14389:4:13",
                        "type": ""
                      }
                    ],
                    "src": "14224:410:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14813:151:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14830:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14841:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14823:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14823:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14823:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14864:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14875:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14860:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14860:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14880:1:13",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14853:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14853:29:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14853:29:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14902:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14913:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14898:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14898:18:13"
                              },
                              {
                                "hexValue": "4149",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "14918:4:13",
                                "type": "",
                                "value": "AI"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14891:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14891:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14891:32:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14932:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14944:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14955:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14940:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14940:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14932:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14790:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14804:4:13",
                        "type": ""
                      }
                    ],
                    "src": "14639:325:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15143:224:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15160:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15171:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15153:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15153:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15153:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15194:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15205:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15190:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15190:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15210:2:13",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15183:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15183:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15183:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15233:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15244:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15229:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15229:18:13"
                              },
                              {
                                "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15249:34:13",
                                "type": "",
                                "value": "ECDSA: invalid signature 'v' val"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15222:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15222:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15222:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15304:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15315:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15300:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15300:18:13"
                              },
                              {
                                "hexValue": "7565",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15320:4:13",
                                "type": "",
                                "value": "ue"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15293:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15293:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15293:32:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15334:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15346:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15357:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15342:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15342:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15334:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15120:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15134:4:13",
                        "type": ""
                      }
                    ],
                    "src": "14969:398:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15546:182:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15563:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15574:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15556:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15556:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15556:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15597:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15608:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15593:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15593:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15613:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15586:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15586:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15586:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15636:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15647:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15632:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15632:18:13"
                              },
                              {
                                "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15652:34:13",
                                "type": "",
                                "value": "ERC721: mint to the zero address"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15625:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15625:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15625:62:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15696:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15708:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15719:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15704:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15704:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15696:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15523:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15537:4:13",
                        "type": ""
                      }
                    ],
                    "src": "15372:356:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15907:239:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15924:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15935:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15917:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15917:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15917:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15958:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15969:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15954:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15954:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15974:2:13",
                                "type": "",
                                "value": "49"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15947:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15947:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15947:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15997:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16008:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15993:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15993:18:13"
                              },
                              {
                                "hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16013:34:13",
                                "type": "",
                                "value": "ERC721URIStorage: URI query for "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15986:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15986:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15986:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16068:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16079:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16064:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16064:18:13"
                              },
                              {
                                "hexValue": "6e6f6e6578697374656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16084:19:13",
                                "type": "",
                                "value": "nonexistent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16057:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16057:47:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16057:47:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16113:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16125:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16136:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16121:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16121:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16113:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15884:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15898:4:13",
                        "type": ""
                      }
                    ],
                    "src": "15733:413:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16325:234:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16342:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16353:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16335:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16335:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16335:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16376:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16387:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16372:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16372:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16392:2:13",
                                "type": "",
                                "value": "44"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16365:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16365:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16365:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16415:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16426:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16411:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16411:18:13"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16431:34:13",
                                "type": "",
                                "value": "ERC721: approved query for nonex"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16404:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16404:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16404:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16486:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16497:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16482:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16482:18:13"
                              },
                              {
                                "hexValue": "697374656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16502:14:13",
                                "type": "",
                                "value": "istent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16475:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16475:42:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16475:42:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16526:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16538:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16549:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16534:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16534:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16526:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16302:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16316:4:13",
                        "type": ""
                      }
                    ],
                    "src": "16151:408:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16738:231:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16755:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16766:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16748:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16748:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16748:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16789:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16800:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16785:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16785:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16805:2:13",
                                "type": "",
                                "value": "41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16778:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16778:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16778:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16828:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16839:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16824:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16824:18:13"
                              },
                              {
                                "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16844:34:13",
                                "type": "",
                                "value": "ERC721: transfer of token that i"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16817:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16817:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16817:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16899:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16910:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16895:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16895:18:13"
                              },
                              {
                                "hexValue": "73206e6f74206f776e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16915:11:13",
                                "type": "",
                                "value": "s not own"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16888:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16888:39:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16888:39:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16936:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16948:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16959:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16944:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16944:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16936:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16715:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16729:4:13",
                        "type": ""
                      }
                    ],
                    "src": "16564:405:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17148:237:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17165:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17176:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17158:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17158:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17158:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17199:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17210:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17195:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17195:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17215:2:13",
                                "type": "",
                                "value": "47"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17188:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17188:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17188:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17238:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17249:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17234:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17234:18:13"
                              },
                              {
                                "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "17254:34:13",
                                "type": "",
                                "value": "ERC721Metadata: URI query for no"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17227:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17227:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17227:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17309:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17320:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17305:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17305:18:13"
                              },
                              {
                                "hexValue": "6e6578697374656e7420746f6b656e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "17325:17:13",
                                "type": "",
                                "value": "nexistent token"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17298:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17298:45:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17298:45:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17352:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17364:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17375:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17360:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17360:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17352:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17125:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17139:4:13",
                        "type": ""
                      }
                    ],
                    "src": "16974:411:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17564:223:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17581:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17592:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17574:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17574:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17574:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17615:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17626:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17611:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17611:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17631:2:13",
                                "type": "",
                                "value": "33"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17604:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17604:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17604:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17654:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17665:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17650:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17650:18:13"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "17670:34:13",
                                "type": "",
                                "value": "ERC721: approval to current owne"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17643:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17643:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17643:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17725:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17736:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17721:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17721:18:13"
                              },
                              {
                                "hexValue": "72",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "17741:3:13",
                                "type": "",
                                "value": "r"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17714:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17714:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17714:31:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17754:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17766:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17777:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17762:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17762:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17754:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17541:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17555:4:13",
                        "type": ""
                      }
                    ],
                    "src": "17390:397:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17966:153:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17983:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17994:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17976:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17976:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17976:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18017:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18028:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18013:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18013:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18033:1:13",
                                "type": "",
                                "value": "4"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18006:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18006:29:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18006:29:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18055:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18066:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18051:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18051:18:13"
                              },
                              {
                                "hexValue": "4d425049",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "18071:6:13",
                                "type": "",
                                "value": "MBPI"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18044:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18044:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18044:34:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18087:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18099:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18110:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18095:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18095:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18087:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_be4ca857a9374b374f60782c442e86281fd7c969d48d41605e609ae689d56c9c__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17943:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17957:4:13",
                        "type": ""
                      }
                    ],
                    "src": "17792:327:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18298:239:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18315:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18326:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18308:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18308:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18308:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18349:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18360:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18345:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18345:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18365:2:13",
                                "type": "",
                                "value": "49"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18338:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18338:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18338:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18388:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18399:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18384:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18384:18:13"
                              },
                              {
                                "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "18404:34:13",
                                "type": "",
                                "value": "ERC721: transfer caller is not o"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18377:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18377:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18377:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18459:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18470:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18455:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18455:18:13"
                              },
                              {
                                "hexValue": "776e6572206e6f7220617070726f766564",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "18475:19:13",
                                "type": "",
                                "value": "wner nor approved"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18448:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18448:47:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18448:47:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18504:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18516:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18527:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18512:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18512:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18504:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18275:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18289:4:13",
                        "type": ""
                      }
                    ],
                    "src": "18124:413:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18716:152:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18733:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18744:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18726:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18726:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18726:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18767:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18778:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18763:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18763:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18783:1:13",
                                "type": "",
                                "value": "3"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18756:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18756:29:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18756:29:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18805:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18816:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18801:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18801:18:13"
                              },
                              {
                                "hexValue": "4e4652",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "18821:5:13",
                                "type": "",
                                "value": "NFR"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18794:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18794:33:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18794:33:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18836:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18848:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18859:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18844:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18844:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18836:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_e5439dd242b37a228f8113c5d8af847e6480904604de316eb968c5572a5a6bd8__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18693:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18707:4:13",
                        "type": ""
                      }
                    ],
                    "src": "18542:326:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18974:76:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18984:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18996:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19007:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18992:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18992:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18984:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19026:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19037:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19019:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19019:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19019:25:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18943:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18954:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18965:4:13",
                        "type": ""
                      }
                    ],
                    "src": "18873:177:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19184:119:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19194:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19206:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19217:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19202:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19202:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19194:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19236:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19247:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19229:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19229:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19229:25:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19274:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19285:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19270:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19270:18:13"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19290:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19263:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19263:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19263:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19145:9:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19156:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19164:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19175:4:13",
                        "type": ""
                      }
                    ],
                    "src": "19055:248:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19356:80:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19383:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "19385:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19385:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "19385:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19372:1:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19379:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "19375:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19375:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "19369:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19369:13:13"
                          },
                          "nodeType": "YulIf",
                          "src": "19366:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19414:16:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19425:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19428:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19421:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19421:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "19414:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "19339:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "19342:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "19348:3:13",
                        "type": ""
                      }
                    ],
                    "src": "19308:128:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19487:74:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19510:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "19512:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19512:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "19512:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19507:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "19500:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19500:9:13"
                          },
                          "nodeType": "YulIf",
                          "src": "19497:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19541:14:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19550:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19553:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "19546:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19546:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "19541:1:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "19472:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "19475:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "19481:1:13",
                        "type": ""
                      }
                    ],
                    "src": "19441:120:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19630:358:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19640:16:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19655:1:13",
                            "type": "",
                            "value": "1"
                          },
                          "variables": [
                            {
                              "name": "power_1",
                              "nodeType": "YulTypedName",
                              "src": "19644:7:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19665:16:13",
                          "value": {
                            "name": "power_1",
                            "nodeType": "YulIdentifier",
                            "src": "19674:7:13"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "19665:5:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19690:13:13",
                          "value": {
                            "name": "_base",
                            "nodeType": "YulIdentifier",
                            "src": "19698:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "19690:4:13"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19754:228:13",
                            "statements": [
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "19799:22:13",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "panic_error_0x11",
                                          "nodeType": "YulIdentifier",
                                          "src": "19801:16:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19801:18:13"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "19801:18:13"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "19774:4:13"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "19788:1:13",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "19784:3:13"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19784:6:13"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "19792:4:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "div",
                                        "nodeType": "YulIdentifier",
                                        "src": "19780:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19780:17:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nodeType": "YulIdentifier",
                                    "src": "19771:2:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19771:27:13"
                                },
                                "nodeType": "YulIf",
                                "src": "19768:2:13"
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "19860:29:13",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "19862:25:13",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "19875:5:13"
                                          },
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "19882:4:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "19871:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19871:16:13"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "power",
                                          "nodeType": "YulIdentifier",
                                          "src": "19862:5:13"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "19841:8:13"
                                    },
                                    {
                                      "name": "power_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "19851:7:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "19837:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19837:22:13"
                                },
                                "nodeType": "YulIf",
                                "src": "19834:2:13"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "19902:23:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "19914:4:13"
                                    },
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "19920:4:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "19910:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19910:15:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "19902:4:13"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "19938:34:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "power_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "19954:7:13"
                                    },
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "19963:8:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19950:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19950:22:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "19938:8:13"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "19723:8:13"
                              },
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "19733:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "19720:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19720:21:13"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "19742:3:13",
                            "statements": []
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "19716:3:13",
                            "statements": []
                          },
                          "src": "19712:270:13"
                        }
                      ]
                    },
                    "name": "checked_exp_helper",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "_base",
                        "nodeType": "YulTypedName",
                        "src": "19594:5:13",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "19601:8:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "19614:5:13",
                        "type": ""
                      },
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "19621:4:13",
                        "type": ""
                      }
                    ],
                    "src": "19566:422:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20061:72:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20071:56:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "20101:4:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "20111:8:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20121:4:13",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20107:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20107:19:13"
                              }
                            ],
                            "functionName": {
                              "name": "checked_exp_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "20080:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20080:47:13"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "20071:5:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_exp_t_uint256_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "20032:4:13",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "20038:8:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "20051:5:13",
                        "type": ""
                      }
                    ],
                    "src": "19993:140:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20197:747:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "20235:52:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "20249:10:13",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "20258:1:13",
                                  "type": "",
                                  "value": "1"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "20249:5:13"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "20272:5:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "20217:8:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20210:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20210:16:13"
                          },
                          "nodeType": "YulIf",
                          "src": "20207:2:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "20320:52:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "20334:10:13",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "20343:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "20334:5:13"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "20357:5:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "20306:4:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20299:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20299:12:13"
                          },
                          "nodeType": "YulIf",
                          "src": "20296:2:13"
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20408:52:13",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "20422:10:13",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "20431:1:13",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "20422:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "20445:5:13"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "20401:59:13",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20406:1:13",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20476:123:13",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "20511:22:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "20513:16:13"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20513:18:13"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "20513:18:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "20496:8:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20506:3:13",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "20493:2:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20493:17:13"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "20490:2:13"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "20546:25:13",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "20559:8:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20569:1:13",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "20555:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20555:16:13"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "20546:5:13"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "20584:5:13"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "20469:130:13",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20474:1:13",
                                "type": "",
                                "value": "2"
                              }
                            }
                          ],
                          "expression": {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "20388:4:13"
                          },
                          "nodeType": "YulSwitch",
                          "src": "20381:218:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "20697:70:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "20711:28:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "20724:4:13"
                                    },
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "20730:8:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "exp",
                                    "nodeType": "YulIdentifier",
                                    "src": "20720:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20720:19:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "20711:5:13"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "20752:5:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "20621:4:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20627:2:13",
                                        "type": "",
                                        "value": "11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20618:2:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20618:12:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "20635:8:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20645:2:13",
                                        "type": "",
                                        "value": "78"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20632:2:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20632:16:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20614:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20614:35:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "20658:4:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20664:3:13",
                                        "type": "",
                                        "value": "307"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20655:2:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20655:13:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "20673:8:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20683:2:13",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20670:2:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20670:16:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20651:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20651:36:13"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "20611:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20611:77:13"
                          },
                          "nodeType": "YulIf",
                          "src": "20608:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20776:57:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "20818:4:13"
                              },
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "20824:8:13"
                              }
                            ],
                            "functionName": {
                              "name": "checked_exp_helper",
                              "nodeType": "YulIdentifier",
                              "src": "20799:18:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20799:34:13"
                          },
                          "variables": [
                            {
                              "name": "power_1",
                              "nodeType": "YulTypedName",
                              "src": "20780:7:13",
                              "type": ""
                            },
                            {
                              "name": "base_1",
                              "nodeType": "YulTypedName",
                              "src": "20789:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "20878:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "20880:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20880:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "20880:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "20848:7:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20865:1:13",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "20861:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20861:6:13"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20869:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "20857:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20857:19:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "20845:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20845:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "20842:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20909:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "20922:7:13"
                              },
                              {
                                "name": "base_1",
                                "nodeType": "YulIdentifier",
                                "src": "20931:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "20918:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20918:20:13"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "20909:5:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_exp_unsigned",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "20168:4:13",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "20174:8:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "20187:5:13",
                        "type": ""
                      }
                    ],
                    "src": "20138:806:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21001:116:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21060:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21062:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21062:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21062:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "21032:1:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "21025:6:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21025:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "21018:6:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21018:17:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21040:1:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "21051:1:13",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "21047:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21047:6:13"
                                      },
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "21055:1:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "21043:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21043:14:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21037:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21037:21:13"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "21014:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21014:45:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21011:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21091:20:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21106:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21109:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "21102:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21102:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "21091:7:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "20980:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "20983:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "20989:7:13",
                        "type": ""
                      }
                    ],
                    "src": "20949:168:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21171:76:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21193:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21195:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21195:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21195:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21187:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21190:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "21184:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21184:8:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21181:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21224:17:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21236:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21239:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "21232:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21232:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "21224:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "21153:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "21156:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "21162:4:13",
                        "type": ""
                      }
                    ],
                    "src": "21122:125:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21305:205:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "21315:10:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21324:1:13",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "21319:1:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21384:63:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "21409:3:13"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "21414:1:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "21405:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21405:11:13"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "21428:3:13"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "21433:1:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "21424:3:13"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21424:11:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "21418:5:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21418:18:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "21398:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21398:39:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21398:39:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "21345:1:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "21348:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "21342:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21342:13:13"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "21356:19:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "21358:15:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "21367:1:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21370:2:13",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "21363:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21363:10:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "21358:1:13"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "21338:3:13",
                            "statements": []
                          },
                          "src": "21334:113:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21473:31:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "21486:3:13"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "21491:6:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "21482:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21482:16:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21500:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "21475:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21475:27:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21475:27:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "21462:1:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "21465:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "21459:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21459:13:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21456:2:13"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "21283:3:13",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "21288:3:13",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "21293:6:13",
                        "type": ""
                      }
                    ],
                    "src": "21252:258:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21570:325:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21580:22:13",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21594:1:13",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "21597:4:13"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "21590:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21590:12:13"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "21580:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "21611:38:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "21641:4:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21647:1:13",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "21637:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21637:12:13"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "21615:18:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21688:31:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "21690:27:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "21704:6:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21712:4:13",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "21700:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21700:17:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21690:6:13"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "21668:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21661:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21661:26:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21658:2:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21778:111:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21799:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21806:3:13",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21811:10:13",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "21802:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21802:20:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "21792:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21792:31:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21792:31:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21843:1:13",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21846:4:13",
                                      "type": "",
                                      "value": "0x22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "21836:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21836:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21836:15:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21871:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "21874:4:13",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "21864:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21864:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21864:15:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "21734:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21757:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21765:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21754:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21754:14:13"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "21731:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21731:38:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21728:2:13"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "21550:4:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "21559:6:13",
                        "type": ""
                      }
                    ],
                    "src": "21515:380:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21947:88:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21978:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21980:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21980:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21980:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21963:5:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21974:1:13",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "21970:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21970:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "21960:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21960:17:13"
                          },
                          "nodeType": "YulIf",
                          "src": "21957:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22009:20:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22020:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22027:1:13",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22016:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22016:13:13"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22009:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "21929:5:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "21939:3:13",
                        "type": ""
                      }
                    ],
                    "src": "21900:135:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22078:74:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "22101:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "22103:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22103:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "22103:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "22098:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "22091:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22091:9:13"
                          },
                          "nodeType": "YulIf",
                          "src": "22088:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22132:14:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22141:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "22144:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "mod",
                              "nodeType": "YulIdentifier",
                              "src": "22137:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22137:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "22132:1:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "mod_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "22063:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "22066:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "22072:1:13",
                        "type": ""
                      }
                    ],
                    "src": "22040:112:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22189:95:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22206:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22213:3:13",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22218:10:13",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "22209:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22209:20:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22199:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22199:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22199:31:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22246:1:13",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22249:4:13",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22239:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22239:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22239:15:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22270:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22273:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "22263:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22263:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22263:15:13"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "22157:127:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22321:95:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22338:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22345:3:13",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22350:10:13",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "22341:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22341:20:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22331:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22331:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22331:31:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22378:1:13",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22381:4:13",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22371:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22371:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22371:15:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22402:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22405:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "22395:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22395:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22395:15:13"
                        }
                      ]
                    },
                    "name": "panic_error_0x12",
                    "nodeType": "YulFunctionDefinition",
                    "src": "22289:127:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22453:95:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22470:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22477:3:13",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22482:10:13",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "22473:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22473:20:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22463:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22463:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22463:31:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22510:1:13",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22513:4:13",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22503:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22503:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22503:15:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22534:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22537:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "22527:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22527:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22527:15:13"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nodeType": "YulFunctionDefinition",
                    "src": "22421:127:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22585:95:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22602:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22609:3:13",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22614:10:13",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "22605:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22605:20:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22595:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22595:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22595:31:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22642:1:13",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22645:4:13",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22635:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22635:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22635:15:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22666:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22669:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "22659:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22659:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22659:15:13"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "22553:127:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22729:87:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "22794:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "22803:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "22806:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "22796:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22796:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "22796:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22752:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "22763:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22774:3:13",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22779:10:13",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "22770:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22770:20:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22759:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22759:32:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "22749:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22749:43:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "22742:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22742:51:13"
                          },
                          "nodeType": "YulIf",
                          "src": "22739:2:13"
                        }
                      ]
                    },
                    "name": "validator_revert_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "22718:5:13",
                        "type": ""
                      }
                    ],
                    "src": "22685:131:13"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_2, 0x20), calldataload(_2), dataEnd)\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(end_1, 20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"NO\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ecee85901464eb55b9fc9600d861404e9f56e1735960e526543480601166024__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"NM\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"AI\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_be4ca857a9374b374f60782c442e86281fd7c969d48d41605e609ae689d56c9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"MBPI\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5439dd242b37a228f8113c5d8af847e6480904604de316eb968c5572a5a6bd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"NFR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
              "id": 13,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {},
          "linkReferences": {},
          "object": "60806040526004361061019c5760003560e01c806377119765116100ec578063a3fbbaae1161008a578063bca93cf511610064578063bca93cf514610493578063c87b56dd146104b3578063e985e9c5146104d3578063f620c8151461051c57600080fd5b8063a3fbbaae14610433578063b390c0ab14610453578063b88d4fde1461047357600080fd5b806395d89b41116100c657806395d89b41146103c957806399f7ab31146103de5780639d1b464a146103fe578063a22cb4651461041357600080fd5b806377119765146103745780638d5555f2146103895780638def9f82146103a957600080fd5b806323b872dd116101595780634737576e116101335780634737576e14610301578063481c6a75146103145780636352211e1461033457806370a082311461035457600080fd5b806323b872dd146102a157806331fd9fd1146102c157806342842e0e146102e157600080fd5b806301ffc9a7146101a15780630561942a146101d657806306fdde0314610200578063081812fc14610222578063095ea7b31461025a57806318160ddd1461027c575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f8a565b610531565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610583565b604080519283526020830191909152016101cd565b34801561020c57600080fd5b506102156105a5565b6040516101cd919061213f565b34801561022e57600080fd5b5061024261023d36600461203f565b610637565b6040516001600160a01b0390911681526020016101cd565b34801561026657600080fd5b5061027a610275366004611f60565b6106c4565b005b34801561028857600080fd5b506007546102939081565b6040519081526020016101cd565b3480156102ad57600080fd5b5061027a6102bc366004611e80565b6107da565b3480156102cd57600080fd5b506101c16102dc366004611e32565b61080b565b3480156102ed57600080fd5b5061027a6102fc366004611e80565b610874565b61029361030f366004611fc4565b61088f565b34801561032057600080fd5b50600954610242906001600160a01b031681565b34801561034057600080fd5b5061024261034f36600461203f565b610a24565b34801561036057600080fd5b5061029361036f366004611e32565b610a9b565b34801561038057600080fd5b50610293610b22565b34801561039557600080fd5b506102936103a436600461203f565b610b35565b3480156103b557600080fd5b506102936103c436600461203f565b610b61565b3480156103d557600080fd5b50610215610b86565b3480156103ea57600080fd5b506101eb6103f936600461203f565b610b95565b34801561040a57600080fd5b50610293610bb5565b34801561041f57600080fd5b5061027a61042e366004611f24565b610bce565b34801561043f57600080fd5b506101c161044e366004611e32565b610c93565b34801561045f57600080fd5b506101c161046e366004612058565b610cfb565b34801561047f57600080fd5b5061027a61048e366004611ebc565b610ddb565b34801561049f57600080fd5b50600854610242906001600160a01b031681565b3480156104bf57600080fd5b506102156104ce36600461203f565b610e13565b3480156104df57600080fd5b506101c16104ee366004611e4d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052857600080fd5b50610293610f91565b60006001600160e01b031982166380ac58cd60e01b148061056257506001600160e01b03198216635b5e139f60e01b145b8061057d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061059d61059260075490565b6103f99060016121f5565b915091509091565b6060600080546105b490612371565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090612371565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050905090565b600061064282610faa565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cf82610a24565b9050806001600160a01b0316836001600160a01b0316141561073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161069f565b336001600160a01b0382161480610759575061075981336104ee565b6107cb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069f565b6107d58383610fc7565b505050565b6107e43382611035565b6108005760405162461bcd60e51b815260040161069f906121a4565b6107d583838361111b565b6008546000906001600160a01b0316331461084e5760405162461bcd60e51b815260206004820152600360248201526227232960e91b604482015260640161069f565b50600880546001600160a01b0319166001600160a01b0392909216919091179055600190565b6107d583838360405180602001604052806000815250610ddb565b60008083336040516020016108a59291906120a6565b604051602081830303815290604052905060006109208461091a84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112bb565b6009549091506001600160a01b038083169116146109655760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b600080610970610583565b909250905061097f81836121f5565b34146109b25760405162461bcd60e51b8152602060048201526002602482015261414960f01b604482015260640161069f565b6109c0600780546001019055565b3394506109cd858061135f565b6109d7858861137d565b6008546109ed906001600160a01b031682611408565b604051349086907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd90600090a35050505092915050565b6000818152600260205260408120546001600160a01b03168061057d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161069f565b60006001600160a01b038216610b065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161069f565b506001600160a01b031660009081526003602052604090205490565b6000610b306103a460075490565b905090565b6000612710610b45600284612264565b610b5790670de0b6b3a764000061230f565b61057d919061220d565b6000806000610b6f84610b95565b9092509050610b7e81836121f5565b949350505050565b6060600180546105b490612371565b600080610ba183610b35565b9150610bae600a8361220d565b9050915091565b6000610b30610bc360075490565b6103a49060016121f5565b6001600160a01b038216331415610c275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009546000906001600160a01b03163314610cd55760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055600190565b600033610d0784610a24565b6001600160a01b031614610d425760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640161069f565b610d4c6007611521565b610d5583611578565b6000610d5f610bb5565b905082811015610d9a5760405162461bcd60e51b815260040161069f906020808252600490820152634d42504960e01b604082015260600190565b610da43382611408565b604051819085907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35060019392505050565b610de53383611035565b610e015760405162461bcd60e51b815260040161069f906121a4565b610e0d848484846115bb565b50505050565b6060610e1e82610faa565b610e845760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161069f565b60008281526006602052604081208054610e9d90612371565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec990612371565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505090506000610f43604080518082019091526007815266697066733a2f2f60c81b602082015290565b9050805160001415610f56575092915050565b815115610f88578082604051602001610f709291906120dd565b60405160208183030381529060405292505050919050565b610b7e846115ee565b6000610b30610f9f60075490565b6103c49060016121f5565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ffc82610a24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061104082610faa565b6110a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069f565b60006110ac83610a24565b9050806001600160a01b0316846001600160a01b031614806110e75750836001600160a01b03166110dc84610637565b6001600160a01b0316145b80610b7e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610b7e565b826001600160a01b031661112e82610a24565b6001600160a01b0316146111965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161069f565b6001600160a01b0382166111f85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161069f565b611203600082610fc7565b6001600160a01b038316600090815260036020526040812080546001929061122c90849061232e565b90915550506001600160a01b038216600090815260036020526040812080546001929061125a9084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008151604114156112ef5760208201516040830151606084015160001a6112e5868285856116d5565b935050505061057d565b815160401415611317576020820151604083015161130e85838361187e565b9250505061057d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161069f565b6113798282604051806020016040528060008152506118a8565b5050565b61138682610faa565b6113e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161069f565b600082815260066020908152604090912082516107d592840190611cb1565b804710156114585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161069f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50509050806107d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161069f565b8054806115705760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161069f565b600019019055565b611581816118db565b6000818152600660205260409020805461159a90612371565b1590506115b85760008181526006602052604081206115b891611d35565b50565b6115c684848461111b565b6115d284848484611976565b610e0d5760405162461bcd60e51b815260040161069f90612152565b60606115f982610faa565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161069f565b6000611683604080518082019091526007815266697066733a2f2f60c81b602082015290565b905060008151116116a357604051806020016040528060008152506116ce565b806116ad84611a80565b6040516020016116be9291906120dd565b6040516020818303038152906040525b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161069f565b8360ff16601b148061176757508360ff16601c145b6117be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161069f565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611812573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161069f565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161189e868287856116d5565b9695505050505050565b6118b28383611b7e565b6118bf6000848484611976565b6107d55760405162461bcd60e51b815260040161069f90612152565b60006118e682610a24565b90506118f3600083610fc7565b6001600160a01b038116600090815260036020526040812080546001929061191c90849061232e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611a7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119ba90339089908890889060040161210c565b602060405180830381600087803b1580156119d457600080fd5b505af1925050508015611a04575060408051601f3d908101601f19168201909252611a0191810190611fa7565b60015b611a5e573d808015611a32576040519150601f19603f3d011682016040523d82523d6000602084013e611a37565b606091505b508051611a565760405162461bcd60e51b815260040161069f90612152565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7e565b506001610b7e565b606081611aa45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ace5780611ab8816123ac565b9150611ac79050600a8361220d565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae961241d565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610b7e57611b2860018361232e565b9150611b35600a866123c7565b611b409060306121f5565b60f81b818381518110611b5557611b55612407565b60200101906001600160f81b031916908160001a905350611b77600a8661220d565b9450611b17565b6001600160a01b038216611bd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069f565b611bdd81610faa565b15611c2a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069f565b6001600160a01b0382166000908152600360205260408120805460019290611c539084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611cbd90612371565b90600052602060002090601f016020900481019282611cdf5760008555611d25565b82601f10611cf857805160ff1916838001178555611d25565b82800160010185558215611d25579182015b82811115611d25578251825591602001919060010190611d0a565b50611d31929150611d6b565b5090565b508054611d4190612371565b6000825580601f10611d51575050565b601f0160209004906000526020600020908101906115b891905b5b80821115611d315760008155600101611d6c565b600067ffffffffffffffff80841115611d9b57611d9b61241d565b604051601f8501601f19908116603f01168101908282118183101715611dc357611dc361241d565b81604052809350858152868686011115611ddc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b600082601f830112611e2357600080fd5b6116ce83833560208501611d80565b600060208284031215611e4457600080fd5b6116ce82611df6565b60008060408385031215611e6057600080fd5b611e6983611df6565b9150611e7760208401611df6565b90509250929050565b600080600060608486031215611e9557600080fd5b611e9e84611df6565b9250611eac60208501611df6565b9150604084013590509250925092565b60008060008060808587031215611ed257600080fd5b611edb85611df6565b9350611ee960208601611df6565b925060408501359150606085013567ffffffffffffffff811115611f0c57600080fd5b611f1887828801611e12565b91505092959194509250565b60008060408385031215611f3757600080fd5b611f4083611df6565b915060208301358015158114611f5557600080fd5b809150509250929050565b60008060408385031215611f7357600080fd5b611f7c83611df6565b946020939093013593505050565b600060208284031215611f9c57600080fd5b81356116ce81612433565b600060208284031215611fb957600080fd5b81516116ce81612433565b60008060408385031215611fd757600080fd5b823567ffffffffffffffff80821115611fef57600080fd5b818501915085601f83011261200357600080fd5b61201286833560208501611d80565b9350602085013591508082111561202857600080fd5b5061203585828601611e12565b9150509250929050565b60006020828403121561205157600080fd5b5035919050565b6000806040838503121561206b57600080fd5b50508035926020909101359150565b60008151808452612092816020860160208601612345565b601f01601f19169290920160200192915050565b600083516120b8818460208801612345565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516120ef818460208801612345565b835190830190612103818360208801612345565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061189e9083018461207a565b6020815260006116ce602083018461207a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612208576122086123db565b500190565b60008261221c5761221c6123f1565b500490565b600181815b8085111561225c578160001904821115612242576122426123db565b8085161561224f57918102915b93841c9390800290612226565b509250929050565b60006116ce60ff84168360008261227d5750600161057d565b8161228a5750600061057d565b81600181146122a057600281146122aa576122c6565b600191505061057d565b60ff8411156122bb576122bb6123db565b50506001821b61057d565b5060208310610133831016604e8410600b84101617156122e9575081810a61057d565b6122f38383612221565b8060001904821115612307576123076123db565b029392505050565b6000816000190483118215151615612329576123296123db565b500290565b600082821015612340576123406123db565b500390565b60005b83811015612360578181015183820152602001612348565b83811115610e0d5750506000910152565b600181811c9082168061238557607f821691505b602082108114156123a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123c0576123c06123db565b5060010190565b6000826123d6576123d66123f1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115b857600080fdfea2646970667358221220b1eae1411e039c77b744d2005dac8843c45f41020cafa3325ed5f0eb23b8884764736f6c63430008060033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77119765 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xA3FBBAAE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBCA93CF5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBCA93CF5 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xF620C815 EQ PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3FBBAAE EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xB390C0AB EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x99F7AB31 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77119765 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x8D5555F2 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x8DEF9F82 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4737576E GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4737576E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x31FD9FD1 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x561942A EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x293 SWAP1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x242 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0xB86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xBB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x46E CALLDATASIZE PUSH1 0x4 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xDDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x242 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x562 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x57D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59D PUSH2 0x592 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F9 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x5B4 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E0 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x602 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x610 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CF DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x759 DUP2 CALLER PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E4 CALLER DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 DUP4 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x272329 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x7D5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A5 SWAP3 SWAP2 SWAP1 PUSH2 0x20A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x920 DUP5 PUSH2 0x91A DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x970 PUSH2 0x583 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x97F DUP2 DUP4 PUSH2 0x21F5 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4149 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP5 POP PUSH2 0x9CD DUP6 DUP1 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x9D7 DUP6 DUP9 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x9ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE SWAP1 DUP7 SWAP1 PUSH32 0x8A9DCF4E150B1153011B29FEC302D5BE0C13E84FA8F56AB78587F778A32A90DD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0x3A4 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xB45 PUSH1 0x2 DUP5 PUSH2 0x2264 JUMP JUMPDEST PUSH2 0xB57 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x230F JUMP JUMPDEST PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB6F DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB7E DUP2 DUP4 PUSH2 0x21F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x5B4 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBA1 DUP4 PUSH2 0xB35 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAE PUSH1 0xA DUP4 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0xBC3 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3A4 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD07 DUP5 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xD4C PUSH1 0x7 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0xD55 DUP4 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xD9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x4D425049 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDA4 CALLER DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 DUP6 SWAP1 PUSH32 0xCEC1BAE6E024D929F2929F3478CE70F55F9C636C8EF7B5073A61D7C3A432451B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDE5 CALLER DUP4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0xE0D DUP5 DUP5 DUP5 DUP5 PUSH2 0x15BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE1E DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE9D SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEC9 SWAP1 PUSH2 0x2371 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF16 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF16 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF43 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xF56 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF88 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF70 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7E DUP5 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH2 0xF9F PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3C4 SWAP1 PUSH1 0x1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xFFC DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x10E7 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10DC DUP5 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xB7E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB7E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x112E DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x0 DUP3 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x122C SWAP1 DUP5 SWAP1 PUSH2 0x232E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x125A SWAP1 DUP5 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x12E5 DUP7 DUP3 DUP6 DUP6 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x57D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x1317 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x130E DUP6 DUP4 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1379 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1386 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x13E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x7D5 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1581 DUP2 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x159A SWAP1 PUSH2 0x2371 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x15B8 SWAP2 PUSH2 0x1D35 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15C6 DUP5 DUP5 DUP5 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x15D2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F9 DUP3 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1683 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x697066733A2F2F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16CE JUMP JUMPDEST DUP1 PUSH2 0x16AD DUP5 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16BE SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x1767 JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x17BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 AND PUSH1 0xFF DUP4 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x189E DUP7 DUP3 DUP8 DUP6 PUSH2 0x16D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B2 DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x18BF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x191C SWAP1 DUP5 SWAP1 PUSH2 0x232E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1A78 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x19BA SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x210C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A04 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A01 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1A32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2152 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xB7E JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1AA4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1ACE JUMPI DUP1 PUSH2 0x1AB8 DUP2 PUSH2 0x23AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x220D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE9 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xB7E JUMPI PUSH2 0x1B28 PUSH1 0x1 DUP4 PUSH2 0x232E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B35 PUSH1 0xA DUP7 PUSH2 0x23C7 JUMP JUMPDEST PUSH2 0x1B40 SWAP1 PUSH1 0x30 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B77 PUSH1 0xA DUP7 PUSH2 0x220D JUMP JUMPDEST SWAP5 POP PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0xFAA JUMP JUMPDEST ISZERO PUSH2 0x1C2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1C53 SWAP1 DUP5 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CBD SWAP1 PUSH2 0x2371 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D25 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1CF8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D25 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D25 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D25 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D0A JUMP JUMPDEST POP PUSH2 0x1D31 SWAP3 SWAP2 POP PUSH2 0x1D6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1D41 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1D51 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15B8 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9B PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC3 PUSH2 0x241D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1DDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP3 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E69 DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E77 PUSH1 0x20 DUP5 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9E DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EAC PUSH1 0x20 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EDB DUP6 PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE9 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F18 DUP8 DUP3 DUP9 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F40 DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7C DUP4 PUSH2 0x1DF6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16CE DUP2 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16CE DUP2 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2012 DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x206B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2092 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x20B8 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x20EF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2103 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2345 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x189E SWAP1 DUP4 ADD DUP5 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x23DB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x221C JUMPI PUSH2 0x221C PUSH2 0x23F1 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x225C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2242 PUSH2 0x23DB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x224F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CE PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x227D JUMPI POP PUSH1 0x1 PUSH2 0x57D JUMP JUMPDEST DUP2 PUSH2 0x228A JUMPI POP PUSH1 0x0 PUSH2 0x57D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22A0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x22AA JUMPI PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x57D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x22BB JUMPI PUSH2 0x22BB PUSH2 0x23DB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x22E9 JUMPI POP DUP2 DUP2 EXP PUSH2 0x57D JUMP JUMPDEST PUSH2 0x22F3 DUP4 DUP4 PUSH2 0x2221 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2307 PUSH2 0x23DB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2329 JUMPI PUSH2 0x2329 PUSH2 0x23DB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x2340 PUSH2 0x23DB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2360 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2348 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE0D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23C0 PUSH2 0x23DB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23D6 JUMPI PUSH2 0x23D6 PUSH2 0x23F1 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEA 0xE1 COINBASE 0x1E SUB SWAP13 PUSH24 0xB744D2005DAC8843C45F41020CAFA3325ED5F0EB23B88847 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
          "sourceMap": "312:3140:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:0;;;;;;;;;;-1:-1:-1;1496:300:0;;;;;:::i;:::-;;:::i;:::-;;;7459:14:13;;7452:22;7434:41;;7422:2;7407:18;1496:300:0;;;;;;;;2578:123:12;;;;;;;;;;;;;:::i;:::-;;;;19229:25:13;;;19285:2;19270:18;;19263:34;;;;19202:18;2578:123:12;19184:119:13;2414:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;;;;;-1:-1:-1;3925:217:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6533:32:13;;;6515:51;;6503:2;6488:18;3925:217:0;6470:102:13;3463:401:0;;;;;;;;;;-1:-1:-1;3463:401:0;;;;;:::i;:::-;;:::i;:::-;;597:35:12;;;;;;;;;;-1:-1:-1;597:35:12;;;;;;;;;19019:25:13;;;19007:2;18992:18;597:35:12;18974:76:13;4789:330:0;;;;;;;;;;-1:-1:-1;4789:330:0;;;;;:::i;:::-;;:::i;894:193:12:-;;;;;;;;;;-1:-1:-1;894:193:12;;;;;:::i;:::-;;:::i;5185:179:0:-;;;;;;;;;;-1:-1:-1;5185:179:0;;;;;:::i;:::-;;:::i;1351:720:12:-;;;;;;:::i;:::-;;:::i;711:22::-;;;;;;;;;;-1:-1:-1;711:22:12;;;;-1:-1:-1;;;;;711:22:12;;;2117:235:0;;;;;;;;;;-1:-1:-1;2117:235:0;;;;;:::i;:::-;;:::i;1855:205::-;;;;;;;;;;-1:-1:-1;1855:205:0;;;;;:::i;:::-;;:::i;2705:106:12:-;;;;;;;;;;;;;:::i;3317:132::-;;;;;;;;;;-1:-1:-1;3317:132:12;;;;;:::i;:::-;;:::i;2949:183::-;;;;;;;;;;-1:-1:-1;2949:183:12;;;;;:::i;:::-;;:::i;2576:102:0:-;;;;;;;;;;;;;:::i;3136:177:12:-;;;;;;;;;;-1:-1:-1;3136:177:12;;;;;:::i;:::-;;:::i;2468:106::-;;;;;;;;;;;;;:::i;4209:290:0:-;;;;;;;;;;-1:-1:-1;4209:290:0;;;;;:::i;:::-;;:::i;1091:158:12:-;;;;;;;;;;-1:-1:-1;1091:158:12;;;;;:::i;:::-;;:::i;2075:378::-;;;;;;;;;;-1:-1:-1;2075:378:12;;;;;:::i;:::-;;:::i;5430:320:0:-;;;;;;;;;;-1:-1:-1;5430:320:0;;;;;:::i;:::-;;:::i;672:35:12:-;;;;;;;;;;-1:-1:-1;672:35:12;;;;-1:-1:-1;;;;;672:35:12;;;387:663:3;;;;;;;;;;-1:-1:-1;387:663:3;;;;;:::i;:::-;;:::i;4565:162:0:-;;;;;;;;;;-1:-1:-1;4565:162:0;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:0;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;2815:130:12;;;;;;;;;;;;;:::i;1496:300:0:-;1598:4;-1:-1:-1;;;;;;1633:40:0;;-1:-1:-1;;;1633:40:0;;:104;;-1:-1:-1;;;;;;;1689:48:0;;-1:-1:-1;;;1689:48:0;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:10;;;1753:36:0;1614:175;1496:300;-1:-1:-1;;1496:300:0:o;2578:123:12:-;2627:7;2636;2657:39;2670:21;:11;864:14:7;;773:112;2670:21:12;:25;;2694:1;2670:25;:::i;2657:39::-;2650:46;;;;2578:123;;:::o;2414:98:0:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;-1:-1:-1;;;4020:73:0;;16353:2:13;4020:73:0;;;16335:21:13;16392:2;16372:18;;;16365:30;16431:34;16411:18;;;16404:62;-1:-1:-1;;;16482:18:13;;;16475:42;16534:19;;4020:73:0;;;;;;;;;-1:-1:-1;4111:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:0;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:0;:2;-1:-1:-1;;;;;3600:11:0;;;3592:57;;;;-1:-1:-1;;;3592:57:0;;17592:2:13;3592:57:0;;;17574:21:13;17631:2;17611:18;;;17604:30;17670:34;17650:18;;;17643:62;-1:-1:-1;;;17721:18:13;;;17714:31;17762:19;;3592:57:0;17564:223:13;3592:57:0;665:10:6;-1:-1:-1;;;;;3681:21:0;;;;:62;;-1:-1:-1;3706:37:0;3723:5;665:10:6;4565:162:0;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:0;;13180:2:13;3660:165:0;;;13162:21:13;13219:2;13199:18;;;13192:30;13258:34;13238:18;;;13231:62;13329:26;13309:18;;;13302:54;13373:19;;3660:165:0;13152:246:13;3660:165:0;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;665:10:6;5011:7:0;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:0;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;894:193:12:-;998:12;;964:4;;-1:-1:-1;;;;;998:12:12;984:10;:26;976:42;;;;-1:-1:-1;;;976:42:12;;18744:2:13;976:42:12;;;18726:21:13;18783:1;18763:18;;;18756:29;-1:-1:-1;;;18801:18:13;;;18794:33;18844:18;;976:42:12;18716:152:13;976:42:12;-1:-1:-1;1024:12:12;:40;;-1:-1:-1;;;;;;1024:40:12;-1:-1:-1;;;;;1024:40:12;;;;;;;;;;-1:-1:-1;;894:193:12:o;5185:179:0:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;1351:720:12:-;1434:16;1459:21;1500:4;1506:10;1483:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1459:58;;1523:25;1551:64;1604:10;1551:44;1561:8;1551:19;;;;;;5240:58:9;;6016:66:13;5240:58:9;;;6004:79:13;6099:12;;;6092:28;;;5110:7:9;;6136:12:13;;5240:58:9;;;;;;;;;;;;5230:69;;;;;;5223:76;;5041:265;;;;1551:44:12;:52;;:64::i;:::-;1629:7;;1523:92;;-1:-1:-1;;;;;;1629:28:12;;;:7;;:28;1621:43;;;;-1:-1:-1;;;1621:43:12;;10133:2:13;1621:43:12;;;10115:21:13;10172:1;10152:18;;;10145:29;-1:-1:-1;;;10190:18:13;;;10183:32;10232:18;;1621:43:12;10105:151:13;1621:43:12;1691:13;1706:16;1726:18;:16;:18::i;:::-;1690:54;;-1:-1:-1;1690:54:12;-1:-1:-1;1771:16:12;1690:54;;1771:16;:::i;:::-;1758:9;:29;1750:44;;;;-1:-1:-1;;;1750:44:12;;14841:2:13;1750:44:12;;;14823:21:13;14880:1;14860:18;;;14853:29;-1:-1:-1;;;14898:18:13;;;14891:32;14940:18;;1750:44:12;14813:151:13;1750:44:12;1800:23;:11;978:19:7;;996:1;978:19;;;891:123;1800:23:12;1883:10;;-1:-1:-1;1902:31:12;1883:10;;1902:9;:31::i;:::-;1939:28;1952:8;1962:4;1939:12;:28::i;:::-;1973:12;;:32;;-1:-1:-1;;;;;1973:12:12;1996:8;1973:22;:32::i;:::-;2017:27;;2034:9;;2024:8;;2017:27;;;;;2050:15;;;;1351:720;;;;:::o;2117:235:0:-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:0;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:0;;14016:2:13;2250:73:0;;;13998:21:13;14055:2;14035:18;;;14028:30;14094:34;14074:18;;;14067:62;-1:-1:-1;;;14145:18:13;;;14138:39;14194:19;;2250:73:0;13988:231:13;1855:205:0;1927:7;-1:-1:-1;;;;;1954:19:0;;1946:74;;;;-1:-1:-1;;;1946:74:0;;13605:2:13;1946:74:0;;;13587:21:13;13644:2;13624:18;;;13617:30;13683:34;13663:18;;;13656:62;-1:-1:-1;;;13734:18:13;;;13727:40;13784:19;;1946:74:0;13577:232:13;1946:74:0;-1:-1:-1;;;;;;2037:16:0;;;;;:9;:16;;;;;;;1855:205::o;2705:106:12:-;2754:7;2775:31;2784:21;:11;864:14:7;;773:112;2775:31:12;2768:38;;2705:106;:::o;3317:132::-;3374:7;3424:5;3395:13;3407:1;3395:8;:13;:::i;:::-;:26;;3412:8;3395:26;:::i;:::-;:34;;;;:::i;2949:183::-;3018:7;3033:17;3052:16;3072:22;3085:8;3072:12;:22::i;:::-;3032:62;;-1:-1:-1;3032:62:12;-1:-1:-1;3107:20:12;3032:62;;3107:20;:::i;:::-;3100:27;2949:183;-1:-1:-1;;;;2949:183:12:o;2576:102:0:-;2632:13;2664:7;2657:14;;;;;:::i;3136:177:12:-;3197:21;3220:13;3256:18;3265:8;3256;:18::i;:::-;3240:34;-1:-1:-1;3288:20:12;659:2;3240:34;3288:20;:::i;:::-;3280:28;;3136:177;;;:::o;2468:106::-;2513:7;2534:35;2543:21;:11;864:14:7;;773:112;2543:21:12;:25;;2567:1;2543:25;:::i;4209:290:0:-;-1:-1:-1;;;;;4311:24:0;;665:10:6;4311:24:0;;4303:62;;;;-1:-1:-1;;;4303:62:0;;11225:2:13;4303:62:0;;;11207:21:13;11264:2;11244:18;;;11237:30;11303:27;11283:18;;;11276:55;11348:18;;4303:62:0;11197:175:13;4303:62:0;665:10:6;4376:32:0;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:0;;;;;;;;;;4444:48;;7434:41:13;;;4376:42:0;;665:10:6;4444:48:0;;7407:18:13;4444:48:0;;;;;;;4209:290;;:::o;1091:158:12:-;1185:7;;1151:4;;-1:-1:-1;;;;;1185:7:12;1171:10;:21;1163:36;;;;-1:-1:-1;;;1163:36:12;;10133:2:13;1163:36:12;;;10115:21:13;10172:1;10152:18;;;10145:29;-1:-1:-1;;;10190:18:13;;;10183:32;10232:18;;1163:36:12;10105:151:13;1163:36:12;-1:-1:-1;1205:7:12;:21;;-1:-1:-1;;;;;;1205:21:12;-1:-1:-1;;;;;1205:21:12;;;;;;;;;;-1:-1:-1;;1091:158:12:o;2075:378::-;2146:4;2187:10;2166:17;2174:8;2166:7;:17::i;:::-;-1:-1:-1;;;;;2166:31:12;;2158:46;;;;-1:-1:-1;;;2158:46:12;;8668:2:13;2158:46:12;;;8650:21:13;8707:1;8687:18;;;8680:29;-1:-1:-1;;;8725:18:13;;;8718:32;8767:18;;2158:46:12;8640:151:13;2158:46:12;2211:23;:11;:21;:23::i;:::-;2240:15;2246:8;2240:5;:15::i;:::-;2261:17;2281:14;:12;:14::i;:::-;2261:34;;2322:13;2309:9;:26;;2301:43;;;;-1:-1:-1;;;2301:43:12;;;;;;17994:2:13;17976:21;;;18033:1;18013:18;;;18006:29;-1:-1:-1;;;18066:2:13;18051:18;;18044:34;18110:2;18095:18;;17966:153;2301:43:12;2350:40;2358:10;2380:9;2350:29;:40::i;:::-;2402:27;;2419:9;;2409:8;;2402:27;;;;;-1:-1:-1;2443:4:12;;2075:378;-1:-1:-1;;;2075:378:12:o;5430:320:0:-;5599:41;665:10:6;5632:7:0;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:0;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;387:663:3:-;460:13;493:16;501:7;493;:16::i;:::-;485:78;;;;-1:-1:-1;;;485:78:3;;15935:2:13;485:78:3;;;15917:21:13;15974:2;15954:18;;;15947:30;16013:34;15993:18;;;15986:62;-1:-1:-1;;;16064:18:13;;;16057:47;16121:19;;485:78:3;15907:239:13;485:78:3;574:23;600:19;;;:10;:19;;;;;574:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:18;650:10;1326:16:12;;;;;;;;;;;;-1:-1:-1;;;1326:16:12;;;;;1253:94;650:10:3;629:31;;739:4;733:18;755:1;733:23;729:70;;;-1:-1:-1;779:9:3;387:663;-1:-1:-1;;387:663:3:o;729:70::-;901:23;;:27;897:106;;975:4;981:9;958:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;944:48;;;;387:663;;;:::o;897:106::-;1020:23;1035:7;1020:14;:23::i;2815:130:12:-;2872:7;2893:47;2914:21;:11;864:14:7;;773:112;2914:21:12;:25;;2938:1;2914:25;:::i;7222:125:0:-;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:0;:30;;;7222:125::o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:0;-1:-1:-1;;;;;11147:29:0;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:0;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;-1:-1:-1;;;7614:73:0;;12767:2:13;7614:73:0;;;12749:21:13;12806:2;12786:18;;;12779:30;12845:34;12825:18;;;12818:62;-1:-1:-1;;;12896:18:13;;;12889:42;12948:19;;7614:73:0;12739:234:13;7614:73:0;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:0;:7;-1:-1:-1;;;;;7754:16:0;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:0;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:0;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:0;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;4565:162;10402:560;10556:4;-1:-1:-1;;;;;10529:31:0;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:0;;10521:85;;;;-1:-1:-1;;;10521:85:0;;16766:2:13;10521:85:0;;;16748:21:13;16805:2;16785:18;;;16778:30;16844:34;16824:18;;;16817:62;-1:-1:-1;;;16895:18:13;;;16888:39;16944:19;;10521:85:0;16738:231:13;10521:85:0;-1:-1:-1;;;;;10624:16:0;;10616:65;;;;-1:-1:-1;;;10616:65:0;;10820:2:13;10616:65:0;;;10802:21:13;10859:2;10839:18;;;10832:30;10898:34;10878:18;;;10871:62;-1:-1:-1;;;10949:18:13;;;10942:34;10993:19;;10616:65:0;10792:226:13;10616:65:0;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:0;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:0;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:0;-1:-1:-1;;;;;10891:21:0;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;1288:1241:9:-;1366:7;1582:9;:16;1602:2;1582:22;1578:945;;;1871:4;1856:20;;1850:27;1920:4;1905:20;;1899:27;1977:4;1962:20;;1956:27;1620:9;1948:36;2018:22;2026:4;1948:36;1850:27;1899;2018:7;:22::i;:::-;2011:29;;;;;;;1578:945;2061:9;:16;2081:2;2061:22;2057:466;;;2330:4;2315:20;;2309:27;2380:4;2365:20;;2359:27;2420:20;2428:4;2309:27;2359;2420:7;:20::i;:::-;2413:27;;;;;;2057:466;2471:41;;-1:-1:-1;;;2471:41:9;;8998:2:13;2471:41:9;;;8980:21:13;9037:2;9017:18;;;9010:30;9076:33;9056:18;;;9049:61;9127:18;;2471:41:9;8970:181:13;8179:108:0;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;1197:214:3:-;1296:16;1304:7;1296;:16::i;:::-;1288:75;;;;-1:-1:-1;;;1288:75:3;;14426:2:13;1288:75:3;;;14408:21:13;14465:2;14445:18;;;14438:30;14504:34;14484:18;;;14477:62;-1:-1:-1;;;14555:18:13;;;14548:44;14609:19;;1288:75:3;14398:236:13;1288:75:3;1373:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;2012:312:5:-;2126:6;2101:21;:31;;2093:73;;;;-1:-1:-1;;;2093:73:5;;12409:2:13;2093:73:5;;;12391:21:13;12448:2;12428:18;;;12421:30;12487:31;12467:18;;;12460:59;12536:18;;2093:73:5;12381:179:13;2093:73:5;2178:12;2196:9;-1:-1:-1;;;;;2196:14:5;2218:6;2196:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:52;;;2247:7;2239:78;;;;-1:-1:-1;;;2239:78:5;;11579:2:13;2239:78:5;;;11561:21:13;11618:2;11598:18;;;11591:30;11657:34;11637:18;;;11630:62;11728:28;11708:18;;;11701:56;11774:19;;2239:78:5;11551:248:13;1020:229:7;1099:14;;1131:9;1123:49;;;;-1:-1:-1;;;1123:49:7;;9358:2:13;1123:49:7;;;9340:21:13;9397:2;9377:18;;;9370:30;9436:29;9416:18;;;9409:57;9483:18;;1123:49:7;9330:177:13;1123:49:7;-1:-1:-1;;1223:9:7;1206:26;;1020:229::o;1628:200:3:-;1696:20;1708:7;1696:11;:20::i;:::-;1737:19;;;;:10;:19;;;;;1731:33;;;;;:::i;:::-;:38;;-1:-1:-1;1727:95:3;;1792:19;;;;:10;:19;;;;;1785:26;;;:::i;:::-;1628:200;:::o;6612:307:0:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:0;;;;;;;:::i;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;-1:-1:-1;;;2842:76:0;;17176:2:13;2842:76:0;;;17158:21:13;17215:2;17195:18;;;17188:30;17254:34;17234:18;;;17227:62;-1:-1:-1;;;17305:18:13;;;17298:45;17360:19;;2842:76:0;17148:237:13;2842:76:0;2929:21;2953:10;1326:16:12;;;;;;;;;;;;-1:-1:-1;;;1326:16:12;;;;;1253:94;2953:10:0;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:0:o;3265:1486:9:-;3388:7;4316:66;4302:80;;;4281:161;;;;-1:-1:-1;;;4281:161:9;;12006:2:13;4281:161:9;;;11988:21:13;12045:2;12025:18;;;12018:30;12084:34;12064:18;;;12057:62;-1:-1:-1;;;12135:18:13;;;12128:32;12177:19;;4281:161:9;11978:224:13;4281:161:9;4460:1;:7;;4465:2;4460:7;:18;;;;4471:1;:7;;4476:2;4471:7;4460:18;4452:65;;;;-1:-1:-1;;;4452:65:9;;15171:2:13;4452:65:9;;;15153:21:13;15210:2;15190:18;;;15183:30;15249:34;15229:18;;;15222:62;-1:-1:-1;;;15300:18:13;;;15293:32;15342:19;;4452:65:9;15143:224:13;4452:65:9;4629:24;;;4612:14;4629:24;;;;;;;;;7713:25:13;;;7786:4;7774:17;;7754:18;;;7747:45;;;;7808:18;;;7801:34;;;7851:18;;;7844:34;;;4629:24:9;;7685:19:13;;4629:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4629:24:9;;-1:-1:-1;;4629:24:9;;;-1:-1:-1;;;;;;;4671:20:9;;4663:57;;;;-1:-1:-1;;;4663:57:9;;8315:2:13;4663:57:9;;;8297:21:13;8354:2;8334:18;;;8327:30;8393:26;8373:18;;;8366:54;8437:18;;4663:57:9;8287:174:13;4663:57:9;4738:6;3265:1486;-1:-1:-1;;;;;3265:1486:9:o;2780:359::-;2887:7;-1:-1:-1;;;;;2970:75:9;;3071:3;3067:12;;;3081:2;3063:21;3110:22;3118:4;3063:21;3127:1;2970:75;3110:7;:22::i;:::-;3103:29;2780:359;-1:-1:-1;;;;;;2780:359:9:o;8508:311:0:-;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;-1:-1:-1;;;8661:151:0;;;;;;;:::i;9730:348::-;9789:13;9805:23;9820:7;9805:14;:23::i;:::-;9789:39;;9925:29;9942:1;9946:7;9925:8;:29::i;:::-;-1:-1:-1;;;;;9965:16:0;;;;;;:9;:16;;;;;:21;;9985:1;;9965:16;:21;;9985:1;;9965:21;:::i;:::-;;;;-1:-1:-1;;10003:16:0;;;;:7;:16;;;;;;9996:23;;-1:-1:-1;;;;;;9996:23:0;;;10035:36;10011:7;;10003:16;-1:-1:-1;;;;;10035:36:0;;;;;10003:16;;10035:36;9779:299;9730:348;:::o;11797:782::-;11947:4;-1:-1:-1;;;;;11967:13:0;;1034:20:5;1080:8;11963:610:0;;12002:72;;-1:-1:-1;;;12002:72:0;;-1:-1:-1;;;;;12002:36:0;;;;;:72;;665:10:6;;12053:4:0;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:0;;;;;;;;-1:-1:-1;;12002:72:0;;;;;;;;;;;;:::i;:::-;;;11998:523;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12245:13:0;;12241:266;;12287:60;;-1:-1:-1;;;12287:60:0;;;;;;;:::i;12241:266::-;12459:6;12453:13;12444:6;12440:2;12436:15;12429:38;11998:523;-1:-1:-1;;;;;;12124:55:0;-1:-1:-1;;;12124:55:0;;-1:-1:-1;12117:62:0;;11963:610;-1:-1:-1;12558:4:0;12551:11;;275:703:8;331:13;548:10;544:51;;-1:-1:-1;;574:10:8;;;;;;;;;;;;-1:-1:-1;;;574:10:8;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:8;;-1:-1:-1;720:2:8;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:8;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:8;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:8;;;;;;;;-1:-1:-1;919:11:8;928:2;919:11;;:::i;:::-;;;791:150;;9141:372:0;-1:-1:-1;;;;;9220:16:0;;9212:61;;;;-1:-1:-1;;;9212:61:0;;15574:2:13;9212:61:0;;;15556:21:13;;;15593:18;;;15586:30;15652:34;15632:18;;;15625:62;15704:18;;9212:61:0;15546:182:13;9212:61:0;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;-1:-1:-1;;;9283:58:0;;10463:2:13;9283:58:0;;;10445:21:13;10502:2;10482:18;;;10475:30;10541;10521:18;;;10514:58;10589:18;;9283:58:0;10435:178:13;9283:58:0;-1:-1:-1;;;;;9408:13:0;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:0;-1:-1:-1;;;;;9436:21:0;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:631:13;78:5;108:18;149:2;141:6;138:14;135:2;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:13;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:2;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:2;;;532:1;529;522:12;491:2;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;88:557;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:13;;757:42;;747:2;;813:1;810;803:12;747:2;699:124;;;:::o;828:220::-;870:5;923:3;916:4;908:6;904:17;900:27;890:2;;941:1;938;931:12;890:2;963:79;1038:3;1029:6;1016:20;1009:4;1001:6;997:17;963:79;:::i;1053:186::-;1112:6;1165:2;1153:9;1144:7;1140:23;1136:32;1133:2;;;1181:1;1178;1171:12;1133:2;1204:29;1223:9;1204:29;:::i;1244:260::-;1312:6;1320;1373:2;1361:9;1352:7;1348:23;1344:32;1341:2;;;1389:1;1386;1379:12;1341:2;1412:29;1431:9;1412:29;:::i;:::-;1402:39;;1460:38;1494:2;1483:9;1479:18;1460:38;:::i;:::-;1450:48;;1331:173;;;;;:::o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:2;;;1671:1;1668;1661:12;1623:2;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1613:224;;;;;:::o;1842:537::-;1937:6;1945;1953;1961;2014:3;2002:9;1993:7;1989:23;1985:33;1982:2;;;2031:1;2028;2021:12;1982:2;2054:29;2073:9;2054:29;:::i;:::-;2044:39;;2102:38;2136:2;2125:9;2121:18;2102:38;:::i;:::-;2092:48;;2187:2;2176:9;2172:18;2159:32;2149:42;;2242:2;2231:9;2227:18;2214:32;2269:18;2261:6;2258:30;2255:2;;;2301:1;2298;2291:12;2255:2;2324:49;2365:7;2356:6;2345:9;2341:22;2324:49;:::i;:::-;2314:59;;;1972:407;;;;;;;:::o;2384:347::-;2449:6;2457;2510:2;2498:9;2489:7;2485:23;2481:32;2478:2;;;2526:1;2523;2516:12;2478:2;2549:29;2568:9;2549:29;:::i;:::-;2539:39;;2628:2;2617:9;2613:18;2600:32;2675:5;2668:13;2661:21;2654:5;2651:32;2641:2;;2697:1;2694;2687:12;2641:2;2720:5;2710:15;;;2468:263;;;;;:::o;2736:254::-;2804:6;2812;2865:2;2853:9;2844:7;2840:23;2836:32;2833:2;;;2881:1;2878;2871:12;2833:2;2904:29;2923:9;2904:29;:::i;:::-;2894:39;2980:2;2965:18;;;;2952:32;;-1:-1:-1;;;2823:167:13:o;2995:245::-;3053:6;3106:2;3094:9;3085:7;3081:23;3077:32;3074:2;;;3122:1;3119;3112:12;3074:2;3161:9;3148:23;3180:30;3204:5;3180:30;:::i;3245:249::-;3314:6;3367:2;3355:9;3346:7;3342:23;3338:32;3335:2;;;3383:1;3380;3373:12;3335:2;3415:9;3409:16;3434:30;3458:5;3434:30;:::i;3499:673::-;3586:6;3594;3647:2;3635:9;3626:7;3622:23;3618:32;3615:2;;;3663:1;3660;3653:12;3615:2;3703:9;3690:23;3732:18;3773:2;3765:6;3762:14;3759:2;;;3789:1;3786;3779:12;3759:2;3827:6;3816:9;3812:22;3802:32;;3872:7;3865:4;3861:2;3857:13;3853:27;3843:2;;3894:1;3891;3884:12;3843:2;3917:75;3984:7;3979:2;3966:16;3959:4;3955:2;3951:13;3917:75;:::i;:::-;3907:85;;4045:4;4034:9;4030:20;4017:34;4001:50;;4076:2;4066:8;4063:16;4060:2;;;4092:1;4089;4082:12;4060:2;;4115:51;4158:7;4147:8;4136:9;4132:24;4115:51;:::i;:::-;4105:61;;;3605:567;;;;;:::o;4177:180::-;4236:6;4289:2;4277:9;4268:7;4264:23;4260:32;4257:2;;;4305:1;4302;4295:12;4257:2;-1:-1:-1;4328:23:13;;4247:110;-1:-1:-1;4247:110:13:o;4362:248::-;4430:6;4438;4491:2;4479:9;4470:7;4466:23;4462:32;4459:2;;;4507:1;4504;4497:12;4459:2;-1:-1:-1;;4530:23:13;;;4600:2;4585:18;;;4572:32;;-1:-1:-1;4449:161:13:o;4615:257::-;4656:3;4694:5;4688:12;4721:6;4716:3;4709:19;4737:63;4793:6;4786:4;4781:3;4777:14;4770:4;4763:5;4759:16;4737:63;:::i;:::-;4854:2;4833:15;-1:-1:-1;;4829:29:13;4820:39;;;;4861:4;4816:50;;4664:208;-1:-1:-1;;4664:208:13:o;4877:417::-;5036:3;5074:6;5068:13;5090:53;5136:6;5131:3;5124:4;5116:6;5112:17;5090:53;:::i;:::-;5212:2;5208:15;;;;-1:-1:-1;;5204:53:13;5165:16;;;;5190:68;;;5285:2;5274:14;;5044:250;-1:-1:-1;;5044:250:13:o;5299:470::-;5478:3;5516:6;5510:13;5532:53;5578:6;5573:3;5566:4;5558:6;5554:17;5532:53;:::i;:::-;5648:13;;5607:16;;;;5670:57;5648:13;5607:16;5704:4;5692:17;;5670:57;:::i;:::-;5743:20;;5486:283;-1:-1:-1;;;;5486:283:13:o;6801:488::-;-1:-1:-1;;;;;7070:15:13;;;7052:34;;7122:15;;7117:2;7102:18;;7095:43;7169:2;7154:18;;7147:34;;;7217:3;7212:2;7197:18;;7190:31;;;6995:4;;7238:45;;7263:19;;7255:6;7238:45;:::i;7889:219::-;8038:2;8027:9;8020:21;8001:4;8058:44;8098:2;8087:9;8083:18;8075:6;8058:44;:::i;9512:414::-;9714:2;9696:21;;;9753:2;9733:18;;;9726:30;9792:34;9787:2;9772:18;;9765:62;-1:-1:-1;;;9858:2:13;9843:18;;9836:48;9916:3;9901:19;;9686:240::o;18124:413::-;18326:2;18308:21;;;18365:2;18345:18;;;18338:30;18404:34;18399:2;18384:18;;18377:62;-1:-1:-1;;;18470:2:13;18455:18;;18448:47;18527:3;18512:19;;18298:239::o;19308:128::-;19348:3;19379:1;19375:6;19372:1;19369:13;19366:2;;;19385:18;;:::i;:::-;-1:-1:-1;19421:9:13;;19356:80::o;19441:120::-;19481:1;19507;19497:2;;19512:18;;:::i;:::-;-1:-1:-1;19546:9:13;;19487:74::o;19566:422::-;19655:1;19698:5;19655:1;19712:270;19733:7;19723:8;19720:21;19712:270;;;19792:4;19788:1;19784:6;19780:17;19774:4;19771:27;19768:2;;;19801:18;;:::i;:::-;19851:7;19841:8;19837:22;19834:2;;;19871:16;;;;19834:2;19950:22;;;;19910:15;;;;19712:270;;;19716:3;19630:358;;;;;:::o;19993:140::-;20051:5;20080:47;20121:4;20111:8;20107:19;20101:4;20187:5;20217:8;20207:2;;-1:-1:-1;20258:1:13;20272:5;;20207:2;20306:4;20296:2;;-1:-1:-1;20343:1:13;20357:5;;20296:2;20388:4;20406:1;20401:59;;;;20474:1;20469:130;;;;20381:218;;20401:59;20431:1;20422:10;;20445:5;;;20469:130;20506:3;20496:8;20493:17;20490:2;;;20513:18;;:::i;:::-;-1:-1:-1;;20569:1:13;20555:16;;20584:5;;20381:218;;20683:2;20673:8;20670:16;20664:3;20658:4;20655:13;20651:36;20645:2;20635:8;20632:16;20627:2;20621:4;20618:12;20614:35;20611:77;20608:2;;;-1:-1:-1;20720:19:13;;;20752:5;;20608:2;20799:34;20824:8;20818:4;20799:34;:::i;:::-;20869:6;20865:1;20861:6;20857:19;20848:7;20845:32;20842:2;;;20880:18;;:::i;:::-;20918:20;;20197:747;-1:-1:-1;;;20197:747:13:o;20949:168::-;20989:7;21055:1;21051;21047:6;21043:14;21040:1;21037:21;21032:1;21025:9;21018:17;21014:45;21011:2;;;21062:18;;:::i;:::-;-1:-1:-1;21102:9:13;;21001:116::o;21122:125::-;21162:4;21190:1;21187;21184:8;21181:2;;;21195:18;;:::i;:::-;-1:-1:-1;21232:9:13;;21171:76::o;21252:258::-;21324:1;21334:113;21348:6;21345:1;21342:13;21334:113;;;21424:11;;;21418:18;21405:11;;;21398:39;21370:2;21363:10;21334:113;;;21465:6;21462:1;21459:13;21456:2;;;-1:-1:-1;;21500:1:13;21482:16;;21475:27;21305:205::o;21515:380::-;21594:1;21590:12;;;;21637;;;21658:2;;21712:4;21704:6;21700:17;21690:27;;21658:2;21765;21757:6;21754:14;21734:18;21731:38;21728:2;;;21811:10;21806:3;21802:20;21799:1;21792:31;21846:4;21843:1;21836:15;21874:4;21871:1;21864:15;21728:2;;21570:325;;;:::o;21900:135::-;21939:3;-1:-1:-1;;21960:17:13;;21957:2;;;21980:18;;:::i;:::-;-1:-1:-1;22027:1:13;22016:13;;21947:88::o;22040:112::-;22072:1;22098;22088:2;;22103:18;;:::i;:::-;-1:-1:-1;22137:9:13;;22078:74::o;22157:127::-;22218:10;22213:3;22209:20;22206:1;22199:31;22249:4;22246:1;22239:15;22273:4;22270:1;22263:15;22289:127;22350:10;22345:3;22341:20;22338:1;22331:31;22381:4;22378:1;22371:15;22405:4;22402:1;22395:15;22421:127;22482:10;22477:3;22473:20;22470:1;22463:31;22513:4;22510:1;22503:15;22537:4;22534:1;22527:15;22553:127;22614:10;22609:3;22605:20;22602:1;22595:31;22645:4;22642:1;22635:15;22669:4;22666:1;22659:15;22685:131;-1:-1:-1;;;;;;22759:32:13;;22749:43;;22739:2;;22806:1;22803;22796:12"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1868600",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2700",
            "burn(uint256,uint256)": "infinite",
            "changeFeesReceiver(address)": "26845",
            "changeManager(address)": "26822",
            "currentBurnPrice()": "infinite",
            "currentMintPrice()": "infinite",
            "currentMintWithFeesPrice()": "infinite",
            "currentPrice()": "infinite",
            "feesReceiver()": "2381",
            "getApproved(uint256)": "4821",
            "isApprovedForAll(address,address)": "infinite",
            "manager()": "2404",
            "mint(string,bytes)": "infinite",
            "mintPriceFor(uint256)": "infinite",
            "mintWithFeesPriceFor(uint256)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2645",
            "priceFor(uint256)": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26739",
            "supportsInterface(bytes4)": "534",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "totalSupply()": "2432",
            "transferFrom(address,address,uint256)": "infinite"
          },
          "internal": {
            "_baseURI()": "infinite"
          }
        },
        "methodIdentifiers": {
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "burn(uint256,uint256)": "b390c0ab",
          "changeFeesReceiver(address)": "31fd9fd1",
          "changeManager(address)": "a3fbbaae",
          "currentBurnPrice()": "77119765",
          "currentMintPrice()": "0561942a",
          "currentMintWithFeesPrice()": "f620c815",
          "currentPrice()": "9d1b464a",
          "feesReceiver()": "bca93cf5",
          "getApproved(uint256)": "081812fc",
          "isApprovedForAll(address,address)": "e985e9c5",
          "manager()": "481c6a75",
          "mint(string,bytes)": "4737576e",
          "mintPriceFor(uint256)": "99f7ab31",
          "mintWithFeesPriceFor(uint256)": "8def9f82",
          "name()": "06fdde03",
          "ownerOf(uint256)": "6352211e",
          "priceFor(uint256)": "8d5555f2",
          "safeTransferFrom(address,address,uint256)": "42842e0e",
          "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
          "setApprovalForAll(address,bool)": "a22cb465",
          "supportsInterface(bytes4)": "01ffc9a7",
          "symbol()": "95d89b41",
          "tokenURI(uint256)": "c87b56dd",
          "totalSupply()": "18160ddd",
          "transferFrom(address,address,uint256)": "23b872dd"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_feesReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnPrice\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBurnPrice\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeesReceiver\",\"type\":\"address\"}],\"name\":\"changeFeesReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"changeManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBurnPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintWithFeesPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"mintPriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"mintWithFeesPriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"priceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AvantGarde.sol\":\"AvantGarde\"},\"evmVersion\":\"berlin\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd644260d8e4e64563a7adba96d774dbaac6ae89c2ee58ef49a19850ff1239b08\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        // - case 65: r,s,v signature (standard)\\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return recover(hash, v, r, s);\\n        } else if (signature.length == 64) {\\n            bytes32 r;\\n            bytes32 vs;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                vs := mload(add(signature, 0x40))\\n            }\\n            return recover(hash, r, vs);\\n        } else {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n            v := add(shr(255, vs), 27)\\n        }\\n        return recover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`, `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        require(\\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ECDSA: invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"ECDSA: invalid signature 'v' value\\\");\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0x828774372910d18e7337bc31a288d786748af4cd9da80222467e486ed1d569ab\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AvantGarde.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n//\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\ncontract AvantGarde is ERC721URIStorage {\\n  using ECDSA for bytes32;\\n  using Counters for Counters.Counter;\\n  using Address for address payable;\\n\\n  event Minted(uint256 indexed tokenId, uint256 indexed mintPrice);\\n  event Burned(uint256 indexed tokenId, uint256 indexed burnPrice);\\n\\n  Counters.Counter public totalSupply;\\n\\n  uint8 constant fees = 10; // 10%\\n  address payable public feesReceiver;\\n  address public manager;\\n\\n  constructor(address _manager, address payable _feesReceiver) ERC721(\\\"AvantGarde\\\", \\\"AVG\\\") {\\n    manager = _manager;\\n    feesReceiver = _feesReceiver;\\n  }\\n\\n  function changeFeesReceiver(address _newFeesReceiver) public returns (bool){\\n\\n    require(msg.sender == feesReceiver, \\\"NFR\\\");\\n    feesReceiver = payable(_newFeesReceiver);\\n    return true;\\n\\n  }\\n\\n  function changeManager(address _newManager) public returns (bool){\\n\\n    require(msg.sender == manager, \\\"NM\\\");\\n    manager = _newManager;\\n    return true;\\n\\n  }\\n\\n  function _baseURI() internal override pure returns (string memory) {\\n    return \\\"ipfs://\\\";\\n  }\\n\\n  function mint(string memory _uri, bytes memory _signature) public payable returns (uint256 _tokenId) {\\n\\n    bytes memory _message = abi.encodePacked(_uri, msg.sender);\\n    address _recoveredAddress = keccak256(_message).toEthSignedMessageHash().recover(_signature);\\n    require(manager == _recoveredAddress, \\\"NM\\\");\\n\\n    // Check price\\n    (uint256 price, uint256 mintFees) = currentMintPrice();\\n    require(msg.value == price + mintFees, \\\"AI\\\");\\n    totalSupply.increment();\\n\\n    // Mint token\\n    _tokenId = uint256(uint160(bytes20(msg.sender)));\\n    _safeMint(msg.sender, _tokenId);\\n    _setTokenURI(_tokenId, _uri);\\n    feesReceiver.sendValue(mintFees);\\n\\n    emit Minted(_tokenId, msg.value);\\n    return _tokenId;\\n\\n  }\\n\\n  function burn(uint256 _tokenId, uint256 _minBurnPrice) public returns (bool){\\n\\n    require(ownerOf(_tokenId) == msg.sender, \\\"NO\\\");\\n\\n    totalSupply.decrement();\\n    _burn(_tokenId);\\n    uint256 burnPrice = currentPrice();\\n    require(burnPrice >= _minBurnPrice, \\\"MBPI\\\");\\n    payable(msg.sender).sendValue(burnPrice);\\n\\n    emit Burned(_tokenId, burnPrice);\\n\\n    return true;\\n\\n  }\\n\\n  // Price\\n  function currentPrice() public view returns (uint256){\\n    return priceFor(totalSupply.current() + 1);\\n  }\\n\\n  function currentMintPrice() public view returns (uint256, uint256){\\n    return mintPriceFor(totalSupply.current() + 1);\\n  }\\n\\n  function currentBurnPrice() public view returns (uint256){\\n    return priceFor(totalSupply.current());\\n  }\\n\\n  function currentMintWithFeesPrice() public view returns (uint256){\\n    return mintWithFeesPriceFor(totalSupply.current() + 1);\\n  }\\n\\n  function mintWithFeesPriceFor(uint256 _current) public pure returns (uint256){\\n    (uint256 mintPrice, uint256 mintFees) = mintPriceFor(_current);\\n    return mintPrice + mintFees;\\n  }\\n\\n  function mintPriceFor(uint256 _current) public pure returns (uint256 _currentPrice, uint256 _fees){\\n    _currentPrice = priceFor(_current);\\n    _fees = _currentPrice / fees;\\n  }\\n\\n  function priceFor(uint256 _current) public pure returns (uint256){\\n    return _current ** 2 * (10 ** 18) / 10000; // x^2 / 10000\\n  }\\n\\n}\\n\",\"keccak256\":\"0x0967d7455b469095366e53dd323125b3a2e4fba8a41081b9387bcc2517f5d29d\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 25,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 31,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_owners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 35,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_balances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 39,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 45,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 964,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_string_storage)"
          },
          {
            "astId": 1952,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "totalSupply",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Counter)1429_storage"
          },
          {
            "astId": 1957,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "feesReceiver",
            "offset": 0,
            "slot": "8",
            "type": "t_address_payable"
          },
          {
            "astId": 1959,
            "contract": "contracts/AvantGarde.sol:AvantGarde",
            "label": "manager",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "encoding": "inplace",
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32",
            "value": "t_string_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1429_storage": {
            "encoding": "inplace",
            "label": "struct Counters.Counter",
            "members": [
              {
                "astId": 1428,
                "contract": "contracts/AvantGarde.sol:AvantGarde",
                "label": "_value",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"contracts/AvantGarde.sol\": {\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n//\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\ncontract AvantGarde is ERC721URIStorage {\\n  using ECDSA for bytes32;\\n  using Counters for Counters.Counter;\\n  using Address for address payable;\\n\\n  event Minted(uint256 indexed tokenId, uint256 indexed mintPrice);\\n  event Burned(uint256 indexed tokenId, uint256 indexed burnPrice);\\n\\n  Counters.Counter public totalSupply;\\n\\n  uint8 constant fees = 10; // 10%\\n  address payable public feesReceiver;\\n  address public manager;\\n\\n  constructor(address _manager, address payable _feesReceiver) ERC721(\\\"AvantGarde\\\", \\\"AVG\\\") {\\n    manager = _manager;\\n    feesReceiver = _feesReceiver;\\n  }\\n\\n  function changeFeesReceiver(address _newFeesReceiver) public returns (bool){\\n\\n    require(msg.sender == feesReceiver, \\\"NFR\\\");\\n    feesReceiver = payable(_newFeesReceiver);\\n    return true;\\n\\n  }\\n\\n  function changeManager(address _newManager) public returns (bool){\\n\\n    require(msg.sender == manager, \\\"NM\\\");\\n    manager = _newManager;\\n    return true;\\n\\n  }\\n\\n  function _baseURI() internal override pure returns (string memory) {\\n    return \\\"ipfs://\\\";\\n  }\\n\\n  function mint(string memory _uri, bytes memory _signature) public payable returns (uint256 _tokenId) {\\n\\n    bytes memory _message = abi.encodePacked(_uri, msg.sender);\\n    address _recoveredAddress = keccak256(_message).toEthSignedMessageHash().recover(_signature);\\n    require(manager == _recoveredAddress, \\\"NM\\\");\\n\\n    // Check price\\n    (uint256 price, uint256 mintFees) = currentMintPrice();\\n    require(msg.value == price + mintFees, \\\"AI\\\");\\n    totalSupply.increment();\\n\\n    // Mint token\\n    _tokenId = uint256(uint160(bytes20(msg.sender)));\\n    _safeMint(msg.sender, _tokenId);\\n    _setTokenURI(_tokenId, _uri);\\n    feesReceiver.sendValue(mintFees);\\n\\n    emit Minted(_tokenId, msg.value);\\n    return _tokenId;\\n\\n  }\\n\\n  function burn(uint256 _tokenId, uint256 _minBurnPrice) public returns (bool){\\n\\n    require(ownerOf(_tokenId) == msg.sender, \\\"NO\\\");\\n\\n    totalSupply.decrement();\\n    _burn(_tokenId);\\n    uint256 burnPrice = currentPrice();\\n    require(burnPrice >= _minBurnPrice, \\\"MBPI\\\");\\n    payable(msg.sender).sendValue(burnPrice);\\n\\n    emit Burned(_tokenId, burnPrice);\\n\\n    return true;\\n\\n  }\\n\\n  // Price\\n  function currentPrice() public view returns (uint256){\\n    return priceFor(totalSupply.current() + 1);\\n  }\\n\\n  function currentMintPrice() public view returns (uint256, uint256){\\n    return mintPriceFor(totalSupply.current() + 1);\\n  }\\n\\n  function currentBurnPrice() public view returns (uint256){\\n    return priceFor(totalSupply.current());\\n  }\\n\\n  function currentMintWithFeesPrice() public view returns (uint256){\\n    return mintWithFeesPriceFor(totalSupply.current() + 1);\\n  }\\n\\n  function mintWithFeesPriceFor(uint256 _current) public pure returns (uint256){\\n    (uint256 mintPrice, uint256 mintFees) = mintPriceFor(_current);\\n    return mintPrice + mintFees;\\n  }\\n\\n  function mintPriceFor(uint256 _current) public pure returns (uint256 _currentPrice, uint256 _fees){\\n    _currentPrice = priceFor(_current);\\n    _fees = _currentPrice / fees;\\n  }\\n\\n  function priceFor(uint256 _current) public pure returns (uint256){\\n    return _current ** 2 * (10 ** 18) / 10000; // x^2 / 10000\\n  }\\n\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/ERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        // - case 65: r,s,v signature (standard)\\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return recover(hash, v, r, s);\\n        } else if (signature.length == 64) {\\n            bytes32 r;\\n            bytes32 vs;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                vs := mload(add(signature, 0x40))\\n            }\\n            return recover(hash, r, vs);\\n        } else {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n            v := add(shr(255, vs), 27)\\n        }\\n        return recover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`, `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        require(\\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ECDSA: invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"ECDSA: invalid signature 'v' value\\\");\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Counters.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Address.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    },\n    \"libraries\": {\n      \"\": {\n        \"__CACHE_BREAKER__\": \"0x00000000d41867734bbee4c6863d9255b2b06ac1\"\n      }\n    }\n  }\n}",
      "solcInputHash": "493ed4ca35526ad6bb7c323321a61765",
      "transactionHash": "0x70082ad73a8aefcd22f2353b52e8718165263e99ca13ce93c7c98e211e617187",
      "args": [
        "0x2a3624b3C2d5492C5eD6001d078455C5C10de617",
        "0x7B7e9410A2245459b7270140C45F55DDaeF58392"
      ]
    },
    "decoded": {
      "from": "0x0B18C06D95C37272921432D7fCD80c0d0C34e450",
      "gasPrice": "24000000000",
      "gasLimit": "2168595",
      "to": null,
      "value": "0",
      "nonce": 6,
      "data": "0x60806040523480156200001157600080fd5b506040516200269a3803806200269a833981016040819052620000349162000176565b604080518082018252600a8152694176616e74476172646560b01b60208083019182528351808501909452600384526241564760e81b9084015281519192916200008191600091620000d0565b50805162000097906001906020840190620000d0565b5050600980546001600160a01b039485166001600160a01b0319918216179091556008805493909416921691909117909155506200020b565b828054620000de90620001b5565b90600052602060002090601f0160209004810192826200010257600085556200014d565b82601f106200011d57805160ff19168380011785556200014d565b828001600101855582156200014d579182015b828111156200014d57825182559160200191906001019062000130565b506200015b9291506200015f565b5090565b5b808211156200015b576000815560010162000160565b600080604083850312156200018a57600080fd5b82516200019781620001f2565b6020840151909250620001aa81620001f2565b809150509250929050565b600181811c90821680620001ca57607f821691505b60208210811415620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200020857600080fd5b50565b61247f806200021b6000396000f3fe60806040526004361061019c5760003560e01c806377119765116100ec578063a3fbbaae1161008a578063bca93cf511610064578063bca93cf514610493578063c87b56dd146104b3578063e985e9c5146104d3578063f620c8151461051c57600080fd5b8063a3fbbaae14610433578063b390c0ab14610453578063b88d4fde1461047357600080fd5b806395d89b41116100c657806395d89b41146103c957806399f7ab31146103de5780639d1b464a146103fe578063a22cb4651461041357600080fd5b806377119765146103745780638d5555f2146103895780638def9f82146103a957600080fd5b806323b872dd116101595780634737576e116101335780634737576e14610301578063481c6a75146103145780636352211e1461033457806370a082311461035457600080fd5b806323b872dd146102a157806331fd9fd1146102c157806342842e0e146102e157600080fd5b806301ffc9a7146101a15780630561942a146101d657806306fdde0314610200578063081812fc14610222578063095ea7b31461025a57806318160ddd1461027c575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f8a565b610531565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610583565b604080519283526020830191909152016101cd565b34801561020c57600080fd5b506102156105a5565b6040516101cd919061213f565b34801561022e57600080fd5b5061024261023d36600461203f565b610637565b6040516001600160a01b0390911681526020016101cd565b34801561026657600080fd5b5061027a610275366004611f60565b6106c4565b005b34801561028857600080fd5b506007546102939081565b6040519081526020016101cd565b3480156102ad57600080fd5b5061027a6102bc366004611e80565b6107da565b3480156102cd57600080fd5b506101c16102dc366004611e32565b61080b565b3480156102ed57600080fd5b5061027a6102fc366004611e80565b610874565b61029361030f366004611fc4565b61088f565b34801561032057600080fd5b50600954610242906001600160a01b031681565b34801561034057600080fd5b5061024261034f36600461203f565b610a24565b34801561036057600080fd5b5061029361036f366004611e32565b610a9b565b34801561038057600080fd5b50610293610b22565b34801561039557600080fd5b506102936103a436600461203f565b610b35565b3480156103b557600080fd5b506102936103c436600461203f565b610b61565b3480156103d557600080fd5b50610215610b86565b3480156103ea57600080fd5b506101eb6103f936600461203f565b610b95565b34801561040a57600080fd5b50610293610bb5565b34801561041f57600080fd5b5061027a61042e366004611f24565b610bce565b34801561043f57600080fd5b506101c161044e366004611e32565b610c93565b34801561045f57600080fd5b506101c161046e366004612058565b610cfb565b34801561047f57600080fd5b5061027a61048e366004611ebc565b610ddb565b34801561049f57600080fd5b50600854610242906001600160a01b031681565b3480156104bf57600080fd5b506102156104ce36600461203f565b610e13565b3480156104df57600080fd5b506101c16104ee366004611e4d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052857600080fd5b50610293610f91565b60006001600160e01b031982166380ac58cd60e01b148061056257506001600160e01b03198216635b5e139f60e01b145b8061057d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061059d61059260075490565b6103f99060016121f5565b915091509091565b6060600080546105b490612371565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090612371565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050905090565b600061064282610faa565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cf82610a24565b9050806001600160a01b0316836001600160a01b0316141561073d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161069f565b336001600160a01b0382161480610759575061075981336104ee565b6107cb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069f565b6107d58383610fc7565b505050565b6107e43382611035565b6108005760405162461bcd60e51b815260040161069f906121a4565b6107d583838361111b565b6008546000906001600160a01b0316331461084e5760405162461bcd60e51b815260206004820152600360248201526227232960e91b604482015260640161069f565b50600880546001600160a01b0319166001600160a01b0392909216919091179055600190565b6107d583838360405180602001604052806000815250610ddb565b60008083336040516020016108a59291906120a6565b604051602081830303815290604052905060006109208461091a84805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112bb565b6009549091506001600160a01b038083169116146109655760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b600080610970610583565b909250905061097f81836121f5565b34146109b25760405162461bcd60e51b8152602060048201526002602482015261414960f01b604482015260640161069f565b6109c0600780546001019055565b3394506109cd858061135f565b6109d7858861137d565b6008546109ed906001600160a01b031682611408565b604051349086907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd90600090a35050505092915050565b6000818152600260205260408120546001600160a01b03168061057d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161069f565b60006001600160a01b038216610b065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161069f565b506001600160a01b031660009081526003602052604090205490565b6000610b306103a460075490565b905090565b6000612710610b45600284612264565b610b5790670de0b6b3a764000061230f565b61057d919061220d565b6000806000610b6f84610b95565b9092509050610b7e81836121f5565b949350505050565b6060600180546105b490612371565b600080610ba183610b35565b9150610bae600a8361220d565b9050915091565b6000610b30610bc360075490565b6103a49060016121f5565b6001600160a01b038216331415610c275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009546000906001600160a01b03163314610cd55760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161069f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055600190565b600033610d0784610a24565b6001600160a01b031614610d425760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640161069f565b610d4c6007611521565b610d5583611578565b6000610d5f610bb5565b905082811015610d9a5760405162461bcd60e51b815260040161069f906020808252600490820152634d42504960e01b604082015260600190565b610da43382611408565b604051819085907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35060019392505050565b610de53383611035565b610e015760405162461bcd60e51b815260040161069f906121a4565b610e0d848484846115bb565b50505050565b6060610e1e82610faa565b610e845760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161069f565b60008281526006602052604081208054610e9d90612371565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec990612371565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505090506000610f43604080518082019091526007815266697066733a2f2f60c81b602082015290565b9050805160001415610f56575092915050565b815115610f88578082604051602001610f709291906120dd565b60405160208183030381529060405292505050919050565b610b7e846115ee565b6000610b30610f9f60075490565b6103c49060016121f5565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ffc82610a24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061104082610faa565b6110a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069f565b60006110ac83610a24565b9050806001600160a01b0316846001600160a01b031614806110e75750836001600160a01b03166110dc84610637565b6001600160a01b0316145b80610b7e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610b7e565b826001600160a01b031661112e82610a24565b6001600160a01b0316146111965760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161069f565b6001600160a01b0382166111f85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161069f565b611203600082610fc7565b6001600160a01b038316600090815260036020526040812080546001929061122c90849061232e565b90915550506001600160a01b038216600090815260036020526040812080546001929061125a9084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008151604114156112ef5760208201516040830151606084015160001a6112e5868285856116d5565b935050505061057d565b815160401415611317576020820151604083015161130e85838361187e565b9250505061057d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161069f565b6113798282604051806020016040528060008152506118a8565b5050565b61138682610faa565b6113e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161069f565b600082815260066020908152604090912082516107d592840190611cb1565b804710156114585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161069f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b50509050806107d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161069f565b8054806115705760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161069f565b600019019055565b611581816118db565b6000818152600660205260409020805461159a90612371565b1590506115b85760008181526006602052604081206115b891611d35565b50565b6115c684848461111b565b6115d284848484611976565b610e0d5760405162461bcd60e51b815260040161069f90612152565b60606115f982610faa565b61165d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161069f565b6000611683604080518082019091526007815266697066733a2f2f60c81b602082015290565b905060008151116116a357604051806020016040528060008152506116ce565b806116ad84611a80565b6040516020016116be9291906120dd565b6040516020818303038152906040525b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161069f565b8360ff16601b148061176757508360ff16601c145b6117be5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161069f565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611812573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161069f565b95945050505050565b60006001600160ff1b03821660ff83901c601b0161189e868287856116d5565b9695505050505050565b6118b28383611b7e565b6118bf6000848484611976565b6107d55760405162461bcd60e51b815260040161069f90612152565b60006118e682610a24565b90506118f3600083610fc7565b6001600160a01b038116600090815260036020526040812080546001929061191c90849061232e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611a7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119ba90339089908890889060040161210c565b602060405180830381600087803b1580156119d457600080fd5b505af1925050508015611a04575060408051601f3d908101601f19168201909252611a0191810190611fa7565b60015b611a5e573d808015611a32576040519150601f19603f3d011682016040523d82523d6000602084013e611a37565b606091505b508051611a565760405162461bcd60e51b815260040161069f90612152565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7e565b506001610b7e565b606081611aa45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ace5780611ab8816123ac565b9150611ac79050600a8361220d565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae961241d565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610b7e57611b2860018361232e565b9150611b35600a866123c7565b611b409060306121f5565b60f81b818381518110611b5557611b55612407565b60200101906001600160f81b031916908160001a905350611b77600a8661220d565b9450611b17565b6001600160a01b038216611bd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069f565b611bdd81610faa565b15611c2a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069f565b6001600160a01b0382166000908152600360205260408120805460019290611c539084906121f5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611cbd90612371565b90600052602060002090601f016020900481019282611cdf5760008555611d25565b82601f10611cf857805160ff1916838001178555611d25565b82800160010185558215611d25579182015b82811115611d25578251825591602001919060010190611d0a565b50611d31929150611d6b565b5090565b508054611d4190612371565b6000825580601f10611d51575050565b601f0160209004906000526020600020908101906115b891905b5b80821115611d315760008155600101611d6c565b600067ffffffffffffffff80841115611d9b57611d9b61241d565b604051601f8501601f19908116603f01168101908282118183101715611dc357611dc361241d565b81604052809350858152868686011115611ddc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b600082601f830112611e2357600080fd5b6116ce83833560208501611d80565b600060208284031215611e4457600080fd5b6116ce82611df6565b60008060408385031215611e6057600080fd5b611e6983611df6565b9150611e7760208401611df6565b90509250929050565b600080600060608486031215611e9557600080fd5b611e9e84611df6565b9250611eac60208501611df6565b9150604084013590509250925092565b60008060008060808587031215611ed257600080fd5b611edb85611df6565b9350611ee960208601611df6565b925060408501359150606085013567ffffffffffffffff811115611f0c57600080fd5b611f1887828801611e12565b91505092959194509250565b60008060408385031215611f3757600080fd5b611f4083611df6565b915060208301358015158114611f5557600080fd5b809150509250929050565b60008060408385031215611f7357600080fd5b611f7c83611df6565b946020939093013593505050565b600060208284031215611f9c57600080fd5b81356116ce81612433565b600060208284031215611fb957600080fd5b81516116ce81612433565b60008060408385031215611fd757600080fd5b823567ffffffffffffffff80821115611fef57600080fd5b818501915085601f83011261200357600080fd5b61201286833560208501611d80565b9350602085013591508082111561202857600080fd5b5061203585828601611e12565b9150509250929050565b60006020828403121561205157600080fd5b5035919050565b6000806040838503121561206b57600080fd5b50508035926020909101359150565b60008151808452612092816020860160208601612345565b601f01601f19169290920160200192915050565b600083516120b8818460208801612345565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516120ef818460208801612345565b835190830190612103818360208801612345565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061189e9083018461207a565b6020815260006116ce602083018461207a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612208576122086123db565b500190565b60008261221c5761221c6123f1565b500490565b600181815b8085111561225c578160001904821115612242576122426123db565b8085161561224f57918102915b93841c9390800290612226565b509250929050565b60006116ce60ff84168360008261227d5750600161057d565b8161228a5750600061057d565b81600181146122a057600281146122aa576122c6565b600191505061057d565b60ff8411156122bb576122bb6123db565b50506001821b61057d565b5060208310610133831016604e8410600b84101617156122e9575081810a61057d565b6122f38383612221565b8060001904821115612307576123076123db565b029392505050565b6000816000190483118215151615612329576123296123db565b500290565b600082821015612340576123406123db565b500390565b60005b83811015612360578181015183820152602001612348565b83811115610e0d5750506000910152565b600181811c9082168061238557607f821691505b602082108114156123a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123c0576123c06123db565b5060010190565b6000826123d6576123d66123f1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115b857600080fdfea2646970667358221220b1eae1411e039c77b744d2005dac8843c45f41020cafa3325ed5f0eb23b8884764736f6c634300080600330000000000000000000000002a3624b3c2d5492c5ed6001d078455c5c10de6170000000000000000000000007b7e9410a2245459b7270140c45f55ddaef58392",
      "r": "0x4f91e83a7bc4faddc21f783b4f8dcdd4731ff531665788d34a6815dad27b07ff",
      "s": "0x49a8dd3721225eb8cb5f0e0f316bf931d3baaee211f1f85b5c9359f7af9db642",
      "v": 38,
      "chainId": 1
    }
  }
}